[{"name":"abstract fun <T : LengthUnit<T>> findFit(units: Iterable<T>, length: Length<T>): T?","description":"io.mehow.ruler.UnitFitter.findFit","location":"ruler/io.mehow.ruler/-unit-fitter/find-fit.html","searchKeys":["findFit","abstract fun <T : LengthUnit<T>> findFit(units: Iterable<T>, length: Length<T>): T?","io.mehow.ruler.UnitFitter.findFit"]},{"name":"abstract fun convert(length: Length<*>): Length<*>","description":"io.mehow.ruler.format.LengthConverter.convert","location":"ruler/io.mehow.ruler.format/-length-converter/convert.html","searchKeys":["convert","abstract fun convert(length: Length<*>): Length<*>","io.mehow.ruler.format.LengthConverter.convert"]},{"name":"abstract fun create(length: Length<*>): LengthConverter?","description":"io.mehow.ruler.format.LengthConverter.Factory.create","location":"ruler/io.mehow.ruler.format/-length-converter/-factory/create.html","searchKeys":["create","abstract fun create(length: Length<*>): LengthConverter?","io.mehow.ruler.format.LengthConverter.Factory.create"]},{"name":"abstract fun create(length: Length<*>, context: FormattingContext): LengthFormatter?","description":"io.mehow.ruler.format.LengthFormatter.Factory.create","location":"ruler/io.mehow.ruler.format/-length-formatter/-factory/create.html","searchKeys":["create","abstract fun create(length: Length<*>, context: FormattingContext): LengthFormatter?","io.mehow.ruler.format.LengthFormatter.Factory.create"]},{"name":"abstract fun format(length: Length<*>, driver: FormattingDriver): String","description":"io.mehow.ruler.format.LengthFormatter.format","location":"ruler/io.mehow.ruler.format/-length-formatter/format.html","searchKeys":["format","abstract fun format(length: Length<*>, driver: FormattingDriver): String","io.mehow.ruler.format.LengthFormatter.format"]},{"name":"abstract fun format(measure: Measure<LengthUnit<*>>, context: MeasureContext): String","description":"io.mehow.ruler.format.MeasureFormatter.format","location":"ruler/io.mehow.ruler.format/-measure-formatter/format.html","searchKeys":["format","abstract fun format(measure: Measure<LengthUnit<*>>, context: MeasureContext): String","io.mehow.ruler.format.MeasureFormatter.format"]},{"name":"abstract fun symbol(unit: LengthUnit<*>): String","description":"io.mehow.ruler.format.Translator.symbol","location":"ruler/io.mehow.ruler.format/-translator/symbol.html","searchKeys":["symbol","abstract fun symbol(unit: LengthUnit<*>): String","io.mehow.ruler.format.Translator.symbol"]},{"name":"abstract val locale: Locale","description":"io.mehow.ruler.format.Translator.locale","location":"ruler/io.mehow.ruler.format/-translator/locale.html","searchKeys":["locale","abstract val locale: Locale","io.mehow.ruler.format.Translator.locale"]},{"name":"abstract val units: List<T>","description":"io.mehow.ruler.LengthUnit.units","location":"ruler/io.mehow.ruler/-length-unit/units.html","searchKeys":["units","abstract val units: List<T>","io.mehow.ruler.LengthUnit.units"]},{"name":"class AutoFitConverter(siFitting: List<SiLengthUnit> = listOf(Millimeter, Centimeter, Meter, Kilometer), imperialFitting: List<ImperialLengthUnit> = ImperialLengthUnit.units) : LengthConverter","description":"io.mehow.ruler.format.AutoFitConverter","location":"ruler/io.mehow.ruler.format/-auto-fit-converter/index.html","searchKeys":["AutoFitConverter","class AutoFitConverter(siFitting: List<SiLengthUnit> = listOf(Millimeter, Centimeter, Meter, Kilometer), imperialFitting: List<ImperialLengthUnit> = ImperialLengthUnit.units) : LengthConverter","io.mehow.ruler.format.AutoFitConverter"]},{"name":"class Builder","description":"io.mehow.ruler.format.FormattingContext.Builder","location":"ruler/io.mehow.ruler.format/-formatting-context/-builder/index.html","searchKeys":["Builder","class Builder","io.mehow.ruler.format.FormattingContext.Builder"]},{"name":"class Builder","description":"io.mehow.ruler.format.FormattingDriver.Builder","location":"ruler/io.mehow.ruler.format/-formatting-driver/-builder/index.html","searchKeys":["Builder","class Builder","io.mehow.ruler.format.FormattingDriver.Builder"]},{"name":"class Builder","description":"io.mehow.ruler.format.ImperialFormatter.Builder","location":"ruler/io.mehow.ruler.format/-imperial-formatter/-builder/index.html","searchKeys":["Builder","class Builder","io.mehow.ruler.format.ImperialFormatter.Builder"]},{"name":"class Distance : Comparable<Distance> ","description":"io.mehow.ruler.Distance","location":"ruler/io.mehow.ruler/-distance/index.html","searchKeys":["Distance","class Distance : Comparable<Distance> ","io.mehow.ruler.Distance"]},{"name":"class FormattingContext","description":"io.mehow.ruler.format.FormattingContext","location":"ruler/io.mehow.ruler.format/-formatting-context/index.html","searchKeys":["FormattingContext","class FormattingContext","io.mehow.ruler.format.FormattingContext"]},{"name":"class FormattingDriver","description":"io.mehow.ruler.format.FormattingDriver","location":"ruler/io.mehow.ruler.format/-formatting-driver/index.html","searchKeys":["FormattingDriver","class FormattingDriver","io.mehow.ruler.format.FormattingDriver"]},{"name":"class ImperialFormatter : LengthFormatter","description":"io.mehow.ruler.format.ImperialFormatter","location":"ruler/io.mehow.ruler.format/-imperial-formatter/index.html","searchKeys":["ImperialFormatter","class ImperialFormatter : LengthFormatter","io.mehow.ruler.format.ImperialFormatter"]},{"name":"class Length<T : LengthUnit<T>> : Comparable<Length<*>> ","description":"io.mehow.ruler.Length","location":"ruler/io.mehow.ruler/-length/index.html","searchKeys":["Length","class Length<T : LengthUnit<T>> : Comparable<Length<*>> ","io.mehow.ruler.Length"]},{"name":"class Measure<out T>","description":"io.mehow.ruler.Measure","location":"ruler/io.mehow.ruler/-measure/index.html","searchKeys":["Measure","class Measure<out T>","io.mehow.ruler.Measure"]},{"name":"class MeasureContext","description":"io.mehow.ruler.format.MeasureContext","location":"ruler/io.mehow.ruler.format/-measure-context/index.html","searchKeys":["MeasureContext","class MeasureContext","io.mehow.ruler.format.MeasureContext"]},{"name":"fun <R : LengthUnit<R>> withUnit(unit: R): Length<R>","description":"io.mehow.ruler.Length.withUnit","location":"ruler/io.mehow.ruler/-length/with-unit.html","searchKeys":["withUnit","fun <R : LengthUnit<R>> withUnit(unit: R): Length<R>","io.mehow.ruler.Length.withUnit"]},{"name":"fun <T : LengthUnit<T>> of(value: Double, unit: T): Length<T>","description":"io.mehow.ruler.Length.Companion.of","location":"ruler/io.mehow.ruler/-length/-companion/of.html","searchKeys":["of","fun <T : LengthUnit<T>> of(value: Double, unit: T): Length<T>","io.mehow.ruler.Length.Companion.of"]},{"name":"fun <T : LengthUnit<T>> of(value: Long, unit: T): Length<T>","description":"io.mehow.ruler.Length.Companion.of","location":"ruler/io.mehow.ruler/-length/-companion/of.html","searchKeys":["of","fun <T : LengthUnit<T>> of(value: Long, unit: T): Length<T>","io.mehow.ruler.Length.Companion.of"]},{"name":"fun <T : LengthUnit<T>> toLength(unit: T): Length<T>","description":"io.mehow.ruler.Distance.toLength","location":"ruler/io.mehow.ruler/-distance/to-length.html","searchKeys":["toLength","fun <T : LengthUnit<T>> toLength(unit: T): Length<T>","io.mehow.ruler.Distance.toLength"]},{"name":"fun AutoFitConverter(siFitting: List<SiLengthUnit> = listOf(Millimeter, Centimeter, Meter, Kilometer), imperialFitting: List<ImperialLengthUnit> = ImperialLengthUnit.units)","description":"io.mehow.ruler.format.AutoFitConverter.AutoFitConverter","location":"ruler/io.mehow.ruler.format/-auto-fit-converter/-auto-fit-converter.html","searchKeys":["AutoFitConverter","fun AutoFitConverter(siFitting: List<SiLengthUnit> = listOf(Millimeter, Centimeter, Meter, Kilometer), imperialFitting: List<ImperialLengthUnit> = ImperialLengthUnit.units)","io.mehow.ruler.format.AutoFitConverter.AutoFitConverter"]},{"name":"fun Builder()","description":"io.mehow.ruler.format.FormattingContext.Builder.Builder","location":"ruler/io.mehow.ruler.format/-formatting-context/-builder/-builder.html","searchKeys":["Builder","fun Builder()","io.mehow.ruler.format.FormattingContext.Builder.Builder"]},{"name":"fun Builder()","description":"io.mehow.ruler.format.FormattingDriver.Builder.Builder","location":"ruler/io.mehow.ruler.format/-formatting-driver/-builder/-builder.html","searchKeys":["Builder","fun Builder()","io.mehow.ruler.format.FormattingDriver.Builder.Builder"]},{"name":"fun Builder()","description":"io.mehow.ruler.format.ImperialFormatter.Builder.Builder","location":"ruler/io.mehow.ruler.format/-imperial-formatter/-builder/-builder.html","searchKeys":["Builder","fun Builder()","io.mehow.ruler.format.ImperialFormatter.Builder.Builder"]},{"name":"fun abs(): Distance","description":"io.mehow.ruler.Distance.abs","location":"ruler/io.mehow.ruler/-distance/abs.html","searchKeys":["abs","fun abs(): Distance","io.mehow.ruler.Distance.abs"]},{"name":"fun abs(): Length<T>","description":"io.mehow.ruler.Length.abs","location":"ruler/io.mehow.ruler/-length/abs.html","searchKeys":["abs","fun abs(): Length<T>","io.mehow.ruler.Length.abs"]},{"name":"fun addConverterFactory(factory: LengthConverter.Factory)","description":"io.mehow.ruler.Ruler.addConverterFactory","location":"ruler/io.mehow.ruler/-ruler/add-converter-factory.html","searchKeys":["addConverterFactory","fun addConverterFactory(factory: LengthConverter.Factory)","io.mehow.ruler.Ruler.addConverterFactory"]},{"name":"fun addFormatterFactory(factory: LengthFormatter.Factory)","description":"io.mehow.ruler.Ruler.addFormatterFactory","location":"ruler/io.mehow.ruler/-ruler/add-formatter-factory.html","searchKeys":["addFormatterFactory","fun addFormatterFactory(factory: LengthFormatter.Factory)","io.mehow.ruler.Ruler.addFormatterFactory"]},{"name":"fun build(): FormattingContext","description":"io.mehow.ruler.format.FormattingContext.Builder.build","location":"ruler/io.mehow.ruler.format/-formatting-context/-builder/build.html","searchKeys":["build","fun build(): FormattingContext","io.mehow.ruler.format.FormattingContext.Builder.build"]},{"name":"fun build(): FormattingDriver","description":"io.mehow.ruler.format.FormattingDriver.Builder.build","location":"ruler/io.mehow.ruler.format/-formatting-driver/-builder/build.html","searchKeys":["build","fun build(): FormattingDriver","io.mehow.ruler.format.FormattingDriver.Builder.build"]},{"name":"fun build(): ImperialFormatter","description":"io.mehow.ruler.format.ImperialFormatter.Builder.build","location":"ruler/io.mehow.ruler.format/-imperial-formatter/-builder/build.html","searchKeys":["build","fun build(): ImperialFormatter","io.mehow.ruler.format.ImperialFormatter.Builder.build"]},{"name":"fun coerceUnitAtLeastTo(min: T): Length<T>","description":"io.mehow.ruler.Length.coerceUnitAtLeastTo","location":"ruler/io.mehow.ruler/-length/coerce-unit-at-least-to.html","searchKeys":["coerceUnitAtLeastTo","fun coerceUnitAtLeastTo(min: T): Length<T>","io.mehow.ruler.Length.coerceUnitAtLeastTo"]},{"name":"fun coerceUnitAtMostTo(max: T): Length<T>","description":"io.mehow.ruler.Length.coerceUnitAtMostTo","location":"ruler/io.mehow.ruler/-length/coerce-unit-at-most-to.html","searchKeys":["coerceUnitAtMostTo","fun coerceUnitAtMostTo(max: T): Length<T>","io.mehow.ruler.Length.coerceUnitAtMostTo"]},{"name":"fun coerceUnitIn(min: T, max: T): Length<T>","description":"io.mehow.ruler.Length.coerceUnitIn","location":"ruler/io.mehow.ruler/-length/coerce-unit-in.html","searchKeys":["coerceUnitIn","fun coerceUnitIn(min: T, max: T): Length<T>","io.mehow.ruler.Length.coerceUnitIn"]},{"name":"fun coerceUnitIn(range: ClosedRange<T>): Length<T>","description":"io.mehow.ruler.Length.coerceUnitIn","location":"ruler/io.mehow.ruler/-length/coerce-unit-in.html","searchKeys":["coerceUnitIn","fun coerceUnitIn(range: ClosedRange<T>): Length<T>","io.mehow.ruler.Length.coerceUnitIn"]},{"name":"fun format(context: FormattingContext, converter: LengthConverter? = Ruler, formatter: LengthFormatter = Ruler): String","description":"io.mehow.ruler.Distance.format","location":"ruler/io.mehow.ruler/-distance/format.html","searchKeys":["format","fun format(context: FormattingContext, converter: LengthConverter? = Ruler, formatter: LengthFormatter = Ruler): String","io.mehow.ruler.Distance.format"]},{"name":"fun format(context: FormattingContext, converter: LengthConverter? = Ruler, formatter: LengthFormatter = Ruler): String","description":"io.mehow.ruler.Length.format","location":"ruler/io.mehow.ruler/-length/format.html","searchKeys":["format","fun format(context: FormattingContext, converter: LengthConverter? = Ruler, formatter: LengthFormatter = Ruler): String","io.mehow.ruler.Length.format"]},{"name":"fun format(converter: LengthConverter? = Ruler, formatter: LengthFormatter = Ruler): String","description":"io.mehow.ruler.Distance.format","location":"ruler/io.mehow.ruler/-distance/format.html","searchKeys":["format","fun format(converter: LengthConverter? = Ruler, formatter: LengthFormatter = Ruler): String","io.mehow.ruler.Distance.format"]},{"name":"fun format(converter: LengthConverter? = Ruler, formatter: LengthFormatter = Ruler): String","description":"io.mehow.ruler.Length.format","location":"ruler/io.mehow.ruler/-length/format.html","searchKeys":["format","fun format(converter: LengthConverter? = Ruler, formatter: LengthFormatter = Ruler): String","io.mehow.ruler.Length.format"]},{"name":"fun format(length: Length<*>, context: FormattingContext = formattingContext): String","description":"io.mehow.ruler.format.FormattingDriver.format","location":"ruler/io.mehow.ruler.format/-formatting-driver/format.html","searchKeys":["format","fun format(length: Length<*>, context: FormattingContext = formattingContext): String","io.mehow.ruler.format.FormattingDriver.format"]},{"name":"fun interface Factory","description":"io.mehow.ruler.format.LengthConverter.Factory","location":"ruler/io.mehow.ruler.format/-length-converter/-factory/index.html","searchKeys":["Factory","fun interface Factory","io.mehow.ruler.format.LengthConverter.Factory"]},{"name":"fun interface Factory","description":"io.mehow.ruler.format.LengthFormatter.Factory","location":"ruler/io.mehow.ruler.format/-length-formatter/-factory/index.html","searchKeys":["Factory","fun interface Factory","io.mehow.ruler.format.LengthFormatter.Factory"]},{"name":"fun interface LengthConverter","description":"io.mehow.ruler.format.LengthConverter","location":"ruler/io.mehow.ruler.format/-length-converter/index.html","searchKeys":["LengthConverter","fun interface LengthConverter","io.mehow.ruler.format.LengthConverter"]},{"name":"fun interface LengthFormatter","description":"io.mehow.ruler.format.LengthFormatter","location":"ruler/io.mehow.ruler.format/-length-formatter/index.html","searchKeys":["LengthFormatter","fun interface LengthFormatter","io.mehow.ruler.format.LengthFormatter"]},{"name":"fun interface MeasureFormatter","description":"io.mehow.ruler.format.MeasureFormatter","location":"ruler/io.mehow.ruler.format/-measure-formatter/index.html","searchKeys":["MeasureFormatter","fun interface MeasureFormatter","io.mehow.ruler.format.MeasureFormatter"]},{"name":"fun newBuilder(): FormattingContext.Builder","description":"io.mehow.ruler.format.FormattingContext.newBuilder","location":"ruler/io.mehow.ruler.format/-formatting-context/new-builder.html","searchKeys":["newBuilder","fun newBuilder(): FormattingContext.Builder","io.mehow.ruler.format.FormattingContext.newBuilder"]},{"name":"fun newBuilder(): FormattingDriver.Builder","description":"io.mehow.ruler.format.FormattingDriver.newBuilder","location":"ruler/io.mehow.ruler.format/-formatting-driver/new-builder.html","searchKeys":["newBuilder","fun newBuilder(): FormattingDriver.Builder","io.mehow.ruler.format.FormattingDriver.newBuilder"]},{"name":"fun of(value: Double, unit: LengthUnit<*>): Distance","description":"io.mehow.ruler.Distance.Companion.of","location":"ruler/io.mehow.ruler/-distance/-companion/of.html","searchKeys":["of","fun of(value: Double, unit: LengthUnit<*>): Distance","io.mehow.ruler.Distance.Companion.of"]},{"name":"fun of(value: Long, unit: LengthUnit<*>): Distance","description":"io.mehow.ruler.Distance.Companion.of","location":"ruler/io.mehow.ruler/-distance/-companion/of.html","searchKeys":["of","fun of(value: Long, unit: LengthUnit<*>): Distance","io.mehow.ruler.Distance.Companion.of"]},{"name":"fun ofCentimeters(value: Double): Distance","description":"io.mehow.ruler.Distance.Companion.ofCentimeters","location":"ruler/io.mehow.ruler/-distance/-companion/of-centimeters.html","searchKeys":["ofCentimeters","fun ofCentimeters(value: Double): Distance","io.mehow.ruler.Distance.Companion.ofCentimeters"]},{"name":"fun ofCentimeters(value: Double): Length<SiLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofCentimeters","location":"ruler/io.mehow.ruler/-length/-companion/of-centimeters.html","searchKeys":["ofCentimeters","fun ofCentimeters(value: Double): Length<SiLengthUnit>","io.mehow.ruler.Length.Companion.ofCentimeters"]},{"name":"fun ofCentimeters(value: Long): Distance","description":"io.mehow.ruler.Distance.Companion.ofCentimeters","location":"ruler/io.mehow.ruler/-distance/-companion/of-centimeters.html","searchKeys":["ofCentimeters","fun ofCentimeters(value: Long): Distance","io.mehow.ruler.Distance.Companion.ofCentimeters"]},{"name":"fun ofCentimeters(value: Long): Length<SiLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofCentimeters","location":"ruler/io.mehow.ruler/-length/-companion/of-centimeters.html","searchKeys":["ofCentimeters","fun ofCentimeters(value: Long): Length<SiLengthUnit>","io.mehow.ruler.Length.Companion.ofCentimeters"]},{"name":"fun ofDecameters(value: Double): Distance","description":"io.mehow.ruler.Distance.Companion.ofDecameters","location":"ruler/io.mehow.ruler/-distance/-companion/of-decameters.html","searchKeys":["ofDecameters","fun ofDecameters(value: Double): Distance","io.mehow.ruler.Distance.Companion.ofDecameters"]},{"name":"fun ofDecameters(value: Double): Length<SiLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofDecameters","location":"ruler/io.mehow.ruler/-length/-companion/of-decameters.html","searchKeys":["ofDecameters","fun ofDecameters(value: Double): Length<SiLengthUnit>","io.mehow.ruler.Length.Companion.ofDecameters"]},{"name":"fun ofDecameters(value: Long): Distance","description":"io.mehow.ruler.Distance.Companion.ofDecameters","location":"ruler/io.mehow.ruler/-distance/-companion/of-decameters.html","searchKeys":["ofDecameters","fun ofDecameters(value: Long): Distance","io.mehow.ruler.Distance.Companion.ofDecameters"]},{"name":"fun ofDecameters(value: Long): Length<SiLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofDecameters","location":"ruler/io.mehow.ruler/-length/-companion/of-decameters.html","searchKeys":["ofDecameters","fun ofDecameters(value: Long): Length<SiLengthUnit>","io.mehow.ruler.Length.Companion.ofDecameters"]},{"name":"fun ofDecimeters(value: Double): Distance","description":"io.mehow.ruler.Distance.Companion.ofDecimeters","location":"ruler/io.mehow.ruler/-distance/-companion/of-decimeters.html","searchKeys":["ofDecimeters","fun ofDecimeters(value: Double): Distance","io.mehow.ruler.Distance.Companion.ofDecimeters"]},{"name":"fun ofDecimeters(value: Double): Length<SiLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofDecimeters","location":"ruler/io.mehow.ruler/-length/-companion/of-decimeters.html","searchKeys":["ofDecimeters","fun ofDecimeters(value: Double): Length<SiLengthUnit>","io.mehow.ruler.Length.Companion.ofDecimeters"]},{"name":"fun ofDecimeters(value: Long): Distance","description":"io.mehow.ruler.Distance.Companion.ofDecimeters","location":"ruler/io.mehow.ruler/-distance/-companion/of-decimeters.html","searchKeys":["ofDecimeters","fun ofDecimeters(value: Long): Distance","io.mehow.ruler.Distance.Companion.ofDecimeters"]},{"name":"fun ofDecimeters(value: Long): Length<SiLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofDecimeters","location":"ruler/io.mehow.ruler/-length/-companion/of-decimeters.html","searchKeys":["ofDecimeters","fun ofDecimeters(value: Long): Length<SiLengthUnit>","io.mehow.ruler.Length.Companion.ofDecimeters"]},{"name":"fun ofFeet(value: Double): Distance","description":"io.mehow.ruler.Distance.Companion.ofFeet","location":"ruler/io.mehow.ruler/-distance/-companion/of-feet.html","searchKeys":["ofFeet","fun ofFeet(value: Double): Distance","io.mehow.ruler.Distance.Companion.ofFeet"]},{"name":"fun ofFeet(value: Double): Length<ImperialLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofFeet","location":"ruler/io.mehow.ruler/-length/-companion/of-feet.html","searchKeys":["ofFeet","fun ofFeet(value: Double): Length<ImperialLengthUnit>","io.mehow.ruler.Length.Companion.ofFeet"]},{"name":"fun ofFeet(value: Long): Distance","description":"io.mehow.ruler.Distance.Companion.ofFeet","location":"ruler/io.mehow.ruler/-distance/-companion/of-feet.html","searchKeys":["ofFeet","fun ofFeet(value: Long): Distance","io.mehow.ruler.Distance.Companion.ofFeet"]},{"name":"fun ofFeet(value: Long): Length<ImperialLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofFeet","location":"ruler/io.mehow.ruler/-length/-companion/of-feet.html","searchKeys":["ofFeet","fun ofFeet(value: Long): Length<ImperialLengthUnit>","io.mehow.ruler.Length.Companion.ofFeet"]},{"name":"fun ofGigameters(value: Double): Distance","description":"io.mehow.ruler.Distance.Companion.ofGigameters","location":"ruler/io.mehow.ruler/-distance/-companion/of-gigameters.html","searchKeys":["ofGigameters","fun ofGigameters(value: Double): Distance","io.mehow.ruler.Distance.Companion.ofGigameters"]},{"name":"fun ofGigameters(value: Double): Length<SiLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofGigameters","location":"ruler/io.mehow.ruler/-length/-companion/of-gigameters.html","searchKeys":["ofGigameters","fun ofGigameters(value: Double): Length<SiLengthUnit>","io.mehow.ruler.Length.Companion.ofGigameters"]},{"name":"fun ofGigameters(value: Long): Distance","description":"io.mehow.ruler.Distance.Companion.ofGigameters","location":"ruler/io.mehow.ruler/-distance/-companion/of-gigameters.html","searchKeys":["ofGigameters","fun ofGigameters(value: Long): Distance","io.mehow.ruler.Distance.Companion.ofGigameters"]},{"name":"fun ofGigameters(value: Long): Length<SiLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofGigameters","location":"ruler/io.mehow.ruler/-length/-companion/of-gigameters.html","searchKeys":["ofGigameters","fun ofGigameters(value: Long): Length<SiLengthUnit>","io.mehow.ruler.Length.Companion.ofGigameters"]},{"name":"fun ofHectometers(value: Double): Distance","description":"io.mehow.ruler.Distance.Companion.ofHectometers","location":"ruler/io.mehow.ruler/-distance/-companion/of-hectometers.html","searchKeys":["ofHectometers","fun ofHectometers(value: Double): Distance","io.mehow.ruler.Distance.Companion.ofHectometers"]},{"name":"fun ofHectometers(value: Double): Length<SiLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofHectometers","location":"ruler/io.mehow.ruler/-length/-companion/of-hectometers.html","searchKeys":["ofHectometers","fun ofHectometers(value: Double): Length<SiLengthUnit>","io.mehow.ruler.Length.Companion.ofHectometers"]},{"name":"fun ofHectometers(value: Long): Distance","description":"io.mehow.ruler.Distance.Companion.ofHectometers","location":"ruler/io.mehow.ruler/-distance/-companion/of-hectometers.html","searchKeys":["ofHectometers","fun ofHectometers(value: Long): Distance","io.mehow.ruler.Distance.Companion.ofHectometers"]},{"name":"fun ofHectometers(value: Long): Length<SiLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofHectometers","location":"ruler/io.mehow.ruler/-length/-companion/of-hectometers.html","searchKeys":["ofHectometers","fun ofHectometers(value: Long): Length<SiLengthUnit>","io.mehow.ruler.Length.Companion.ofHectometers"]},{"name":"fun ofInches(value: Double): Distance","description":"io.mehow.ruler.Distance.Companion.ofInches","location":"ruler/io.mehow.ruler/-distance/-companion/of-inches.html","searchKeys":["ofInches","fun ofInches(value: Double): Distance","io.mehow.ruler.Distance.Companion.ofInches"]},{"name":"fun ofInches(value: Double): Length<ImperialLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofInches","location":"ruler/io.mehow.ruler/-length/-companion/of-inches.html","searchKeys":["ofInches","fun ofInches(value: Double): Length<ImperialLengthUnit>","io.mehow.ruler.Length.Companion.ofInches"]},{"name":"fun ofInches(value: Long): Distance","description":"io.mehow.ruler.Distance.Companion.ofInches","location":"ruler/io.mehow.ruler/-distance/-companion/of-inches.html","searchKeys":["ofInches","fun ofInches(value: Long): Distance","io.mehow.ruler.Distance.Companion.ofInches"]},{"name":"fun ofInches(value: Long): Length<ImperialLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofInches","location":"ruler/io.mehow.ruler/-length/-companion/of-inches.html","searchKeys":["ofInches","fun ofInches(value: Long): Length<ImperialLengthUnit>","io.mehow.ruler.Length.Companion.ofInches"]},{"name":"fun ofKilometers(value: Double): Distance","description":"io.mehow.ruler.Distance.Companion.ofKilometers","location":"ruler/io.mehow.ruler/-distance/-companion/of-kilometers.html","searchKeys":["ofKilometers","fun ofKilometers(value: Double): Distance","io.mehow.ruler.Distance.Companion.ofKilometers"]},{"name":"fun ofKilometers(value: Double): Length<SiLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofKilometers","location":"ruler/io.mehow.ruler/-length/-companion/of-kilometers.html","searchKeys":["ofKilometers","fun ofKilometers(value: Double): Length<SiLengthUnit>","io.mehow.ruler.Length.Companion.ofKilometers"]},{"name":"fun ofKilometers(value: Long): Distance","description":"io.mehow.ruler.Distance.Companion.ofKilometers","location":"ruler/io.mehow.ruler/-distance/-companion/of-kilometers.html","searchKeys":["ofKilometers","fun ofKilometers(value: Long): Distance","io.mehow.ruler.Distance.Companion.ofKilometers"]},{"name":"fun ofKilometers(value: Long): Length<SiLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofKilometers","location":"ruler/io.mehow.ruler/-length/-companion/of-kilometers.html","searchKeys":["ofKilometers","fun ofKilometers(value: Long): Length<SiLengthUnit>","io.mehow.ruler.Length.Companion.ofKilometers"]},{"name":"fun ofMegameters(value: Double): Distance","description":"io.mehow.ruler.Distance.Companion.ofMegameters","location":"ruler/io.mehow.ruler/-distance/-companion/of-megameters.html","searchKeys":["ofMegameters","fun ofMegameters(value: Double): Distance","io.mehow.ruler.Distance.Companion.ofMegameters"]},{"name":"fun ofMegameters(value: Double): Length<SiLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofMegameters","location":"ruler/io.mehow.ruler/-length/-companion/of-megameters.html","searchKeys":["ofMegameters","fun ofMegameters(value: Double): Length<SiLengthUnit>","io.mehow.ruler.Length.Companion.ofMegameters"]},{"name":"fun ofMegameters(value: Long): Distance","description":"io.mehow.ruler.Distance.Companion.ofMegameters","location":"ruler/io.mehow.ruler/-distance/-companion/of-megameters.html","searchKeys":["ofMegameters","fun ofMegameters(value: Long): Distance","io.mehow.ruler.Distance.Companion.ofMegameters"]},{"name":"fun ofMegameters(value: Long): Length<SiLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofMegameters","location":"ruler/io.mehow.ruler/-length/-companion/of-megameters.html","searchKeys":["ofMegameters","fun ofMegameters(value: Long): Length<SiLengthUnit>","io.mehow.ruler.Length.Companion.ofMegameters"]},{"name":"fun ofMeters(value: Double): Distance","description":"io.mehow.ruler.Distance.Companion.ofMeters","location":"ruler/io.mehow.ruler/-distance/-companion/of-meters.html","searchKeys":["ofMeters","fun ofMeters(value: Double): Distance","io.mehow.ruler.Distance.Companion.ofMeters"]},{"name":"fun ofMeters(value: Double): Length<SiLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofMeters","location":"ruler/io.mehow.ruler/-length/-companion/of-meters.html","searchKeys":["ofMeters","fun ofMeters(value: Double): Length<SiLengthUnit>","io.mehow.ruler.Length.Companion.ofMeters"]},{"name":"fun ofMeters(value: Long): Distance","description":"io.mehow.ruler.Distance.Companion.ofMeters","location":"ruler/io.mehow.ruler/-distance/-companion/of-meters.html","searchKeys":["ofMeters","fun ofMeters(value: Long): Distance","io.mehow.ruler.Distance.Companion.ofMeters"]},{"name":"fun ofMeters(value: Long): Length<SiLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofMeters","location":"ruler/io.mehow.ruler/-length/-companion/of-meters.html","searchKeys":["ofMeters","fun ofMeters(value: Long): Length<SiLengthUnit>","io.mehow.ruler.Length.Companion.ofMeters"]},{"name":"fun ofMicrometers(value: Double): Distance","description":"io.mehow.ruler.Distance.Companion.ofMicrometers","location":"ruler/io.mehow.ruler/-distance/-companion/of-micrometers.html","searchKeys":["ofMicrometers","fun ofMicrometers(value: Double): Distance","io.mehow.ruler.Distance.Companion.ofMicrometers"]},{"name":"fun ofMicrometers(value: Double): Length<SiLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofMicrometers","location":"ruler/io.mehow.ruler/-length/-companion/of-micrometers.html","searchKeys":["ofMicrometers","fun ofMicrometers(value: Double): Length<SiLengthUnit>","io.mehow.ruler.Length.Companion.ofMicrometers"]},{"name":"fun ofMicrometers(value: Long): Distance","description":"io.mehow.ruler.Distance.Companion.ofMicrometers","location":"ruler/io.mehow.ruler/-distance/-companion/of-micrometers.html","searchKeys":["ofMicrometers","fun ofMicrometers(value: Long): Distance","io.mehow.ruler.Distance.Companion.ofMicrometers"]},{"name":"fun ofMicrometers(value: Long): Length<SiLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofMicrometers","location":"ruler/io.mehow.ruler/-length/-companion/of-micrometers.html","searchKeys":["ofMicrometers","fun ofMicrometers(value: Long): Length<SiLengthUnit>","io.mehow.ruler.Length.Companion.ofMicrometers"]},{"name":"fun ofMiles(value: Double): Distance","description":"io.mehow.ruler.Distance.Companion.ofMiles","location":"ruler/io.mehow.ruler/-distance/-companion/of-miles.html","searchKeys":["ofMiles","fun ofMiles(value: Double): Distance","io.mehow.ruler.Distance.Companion.ofMiles"]},{"name":"fun ofMiles(value: Double): Length<ImperialLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofMiles","location":"ruler/io.mehow.ruler/-length/-companion/of-miles.html","searchKeys":["ofMiles","fun ofMiles(value: Double): Length<ImperialLengthUnit>","io.mehow.ruler.Length.Companion.ofMiles"]},{"name":"fun ofMiles(value: Long): Distance","description":"io.mehow.ruler.Distance.Companion.ofMiles","location":"ruler/io.mehow.ruler/-distance/-companion/of-miles.html","searchKeys":["ofMiles","fun ofMiles(value: Long): Distance","io.mehow.ruler.Distance.Companion.ofMiles"]},{"name":"fun ofMiles(value: Long): Length<ImperialLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofMiles","location":"ruler/io.mehow.ruler/-length/-companion/of-miles.html","searchKeys":["ofMiles","fun ofMiles(value: Long): Length<ImperialLengthUnit>","io.mehow.ruler.Length.Companion.ofMiles"]},{"name":"fun ofMillimeters(value: Double): Distance","description":"io.mehow.ruler.Distance.Companion.ofMillimeters","location":"ruler/io.mehow.ruler/-distance/-companion/of-millimeters.html","searchKeys":["ofMillimeters","fun ofMillimeters(value: Double): Distance","io.mehow.ruler.Distance.Companion.ofMillimeters"]},{"name":"fun ofMillimeters(value: Double): Length<SiLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofMillimeters","location":"ruler/io.mehow.ruler/-length/-companion/of-millimeters.html","searchKeys":["ofMillimeters","fun ofMillimeters(value: Double): Length<SiLengthUnit>","io.mehow.ruler.Length.Companion.ofMillimeters"]},{"name":"fun ofMillimeters(value: Long): Distance","description":"io.mehow.ruler.Distance.Companion.ofMillimeters","location":"ruler/io.mehow.ruler/-distance/-companion/of-millimeters.html","searchKeys":["ofMillimeters","fun ofMillimeters(value: Long): Distance","io.mehow.ruler.Distance.Companion.ofMillimeters"]},{"name":"fun ofMillimeters(value: Long): Length<SiLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofMillimeters","location":"ruler/io.mehow.ruler/-length/-companion/of-millimeters.html","searchKeys":["ofMillimeters","fun ofMillimeters(value: Long): Length<SiLengthUnit>","io.mehow.ruler.Length.Companion.ofMillimeters"]},{"name":"fun ofNanometers(value: Double): Distance","description":"io.mehow.ruler.Distance.Companion.ofNanometers","location":"ruler/io.mehow.ruler/-distance/-companion/of-nanometers.html","searchKeys":["ofNanometers","fun ofNanometers(value: Double): Distance","io.mehow.ruler.Distance.Companion.ofNanometers"]},{"name":"fun ofNanometers(value: Double): Length<SiLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofNanometers","location":"ruler/io.mehow.ruler/-length/-companion/of-nanometers.html","searchKeys":["ofNanometers","fun ofNanometers(value: Double): Length<SiLengthUnit>","io.mehow.ruler.Length.Companion.ofNanometers"]},{"name":"fun ofNanometers(value: Long): Distance","description":"io.mehow.ruler.Distance.Companion.ofNanometers","location":"ruler/io.mehow.ruler/-distance/-companion/of-nanometers.html","searchKeys":["ofNanometers","fun ofNanometers(value: Long): Distance","io.mehow.ruler.Distance.Companion.ofNanometers"]},{"name":"fun ofNanometers(value: Long): Length<SiLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofNanometers","location":"ruler/io.mehow.ruler/-length/-companion/of-nanometers.html","searchKeys":["ofNanometers","fun ofNanometers(value: Long): Length<SiLengthUnit>","io.mehow.ruler.Length.Companion.ofNanometers"]},{"name":"fun ofYards(value: Double): Distance","description":"io.mehow.ruler.Distance.Companion.ofYards","location":"ruler/io.mehow.ruler/-distance/-companion/of-yards.html","searchKeys":["ofYards","fun ofYards(value: Double): Distance","io.mehow.ruler.Distance.Companion.ofYards"]},{"name":"fun ofYards(value: Double): Length<ImperialLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofYards","location":"ruler/io.mehow.ruler/-length/-companion/of-yards.html","searchKeys":["ofYards","fun ofYards(value: Double): Length<ImperialLengthUnit>","io.mehow.ruler.Length.Companion.ofYards"]},{"name":"fun ofYards(value: Long): Distance","description":"io.mehow.ruler.Distance.Companion.ofYards","location":"ruler/io.mehow.ruler/-distance/-companion/of-yards.html","searchKeys":["ofYards","fun ofYards(value: Long): Distance","io.mehow.ruler.Distance.Companion.ofYards"]},{"name":"fun ofYards(value: Long): Length<ImperialLengthUnit>","description":"io.mehow.ruler.Length.Companion.ofYards","location":"ruler/io.mehow.ruler/-length/-companion/of-yards.html","searchKeys":["ofYards","fun ofYards(value: Long): Length<ImperialLengthUnit>","io.mehow.ruler.Length.Companion.ofYards"]},{"name":"fun removeConverterFactory(factory: LengthConverter.Factory)","description":"io.mehow.ruler.Ruler.removeConverterFactory","location":"ruler/io.mehow.ruler/-ruler/remove-converter-factory.html","searchKeys":["removeConverterFactory","fun removeConverterFactory(factory: LengthConverter.Factory)","io.mehow.ruler.Ruler.removeConverterFactory"]},{"name":"fun removeFormatterFactory(factory: LengthFormatter.Factory)","description":"io.mehow.ruler.Ruler.removeFormatterFactory","location":"ruler/io.mehow.ruler/-ruler/remove-formatter-factory.html","searchKeys":["removeFormatterFactory","fun removeFormatterFactory(factory: LengthFormatter.Factory)","io.mehow.ruler.Ruler.removeFormatterFactory"]},{"name":"fun roundDown(): Length<T>","description":"io.mehow.ruler.Length.roundDown","location":"ruler/io.mehow.ruler/-length/round-down.html","searchKeys":["roundDown","fun roundDown(): Length<T>","io.mehow.ruler.Length.roundDown"]},{"name":"fun withFallbackUnit(unit: ImperialLengthUnit): ImperialFormatter.Builder","description":"io.mehow.ruler.format.ImperialFormatter.Builder.withFallbackUnit","location":"ruler/io.mehow.ruler.format/-imperial-formatter/-builder/with-fallback-unit.html","searchKeys":["withFallbackUnit","fun withFallbackUnit(unit: ImperialLengthUnit): ImperialFormatter.Builder","io.mehow.ruler.format.ImperialFormatter.Builder.withFallbackUnit"]},{"name":"fun withFeet(): ImperialFormatter.Builder","description":"io.mehow.ruler.format.ImperialFormatter.Builder.withFeet","location":"ruler/io.mehow.ruler.format/-imperial-formatter/-builder/with-feet.html","searchKeys":["withFeet","fun withFeet(): ImperialFormatter.Builder","io.mehow.ruler.format.ImperialFormatter.Builder.withFeet"]},{"name":"fun withFittingUnit(units: Iterable<T> = unit.units, unitFitter: UnitFitter = BuiltInUnitFitter): Length<T>","description":"io.mehow.ruler.Length.withFittingUnit","location":"ruler/io.mehow.ruler/-length/with-fitting-unit.html","searchKeys":["withFittingUnit","fun withFittingUnit(units: Iterable<T> = unit.units, unitFitter: UnitFitter = BuiltInUnitFitter): Length<T>","io.mehow.ruler.Length.withFittingUnit"]},{"name":"fun withFormattingContext(context: FormattingContext): FormattingDriver.Builder","description":"io.mehow.ruler.format.FormattingDriver.Builder.withFormattingContext","location":"ruler/io.mehow.ruler.format/-formatting-driver/-builder/with-formatting-context.html","searchKeys":["withFormattingContext","fun withFormattingContext(context: FormattingContext): FormattingDriver.Builder","io.mehow.ruler.format.FormattingDriver.Builder.withFormattingContext"]},{"name":"fun withInches(): ImperialFormatter.Builder","description":"io.mehow.ruler.format.ImperialFormatter.Builder.withInches","location":"ruler/io.mehow.ruler.format/-imperial-formatter/-builder/with-inches.html","searchKeys":["withInches","fun withInches(): ImperialFormatter.Builder","io.mehow.ruler.format.ImperialFormatter.Builder.withInches"]},{"name":"fun withMeasureFormatter(formatter: MeasureFormatter): FormattingDriver.Builder","description":"io.mehow.ruler.format.FormattingDriver.Builder.withMeasureFormatter","location":"ruler/io.mehow.ruler.format/-formatting-driver/-builder/with-measure-formatter.html","searchKeys":["withMeasureFormatter","fun withMeasureFormatter(formatter: MeasureFormatter): FormattingDriver.Builder","io.mehow.ruler.format.FormattingDriver.Builder.withMeasureFormatter"]},{"name":"fun withMiles(): ImperialFormatter.Builder","description":"io.mehow.ruler.format.ImperialFormatter.Builder.withMiles","location":"ruler/io.mehow.ruler.format/-imperial-formatter/-builder/with-miles.html","searchKeys":["withMiles","fun withMiles(): ImperialFormatter.Builder","io.mehow.ruler.format.ImperialFormatter.Builder.withMiles"]},{"name":"fun withPartSeparator(separator: String): ImperialFormatter.Builder","description":"io.mehow.ruler.format.ImperialFormatter.Builder.withPartSeparator","location":"ruler/io.mehow.ruler.format/-imperial-formatter/-builder/with-part-separator.html","searchKeys":["withPartSeparator","fun withPartSeparator(separator: String): ImperialFormatter.Builder","io.mehow.ruler.format.ImperialFormatter.Builder.withPartSeparator"]},{"name":"fun withPrecision(precision: Int): FormattingContext","description":"io.mehow.ruler.format.FormattingContext.Companion.withPrecision","location":"ruler/io.mehow.ruler.format/-formatting-context/-companion/with-precision.html","searchKeys":["withPrecision","fun withPrecision(precision: Int): FormattingContext","io.mehow.ruler.format.FormattingContext.Companion.withPrecision"]},{"name":"fun withPrecision(precision: Int): FormattingContext.Builder","description":"io.mehow.ruler.format.FormattingContext.Builder.withPrecision","location":"ruler/io.mehow.ruler.format/-formatting-context/-builder/with-precision.html","searchKeys":["withPrecision","fun withPrecision(precision: Int): FormattingContext.Builder","io.mehow.ruler.format.FormattingContext.Builder.withPrecision"]},{"name":"fun withSeparator(separator: String): FormattingContext","description":"io.mehow.ruler.format.FormattingContext.Companion.withSeparator","location":"ruler/io.mehow.ruler.format/-formatting-context/-companion/with-separator.html","searchKeys":["withSeparator","fun withSeparator(separator: String): FormattingContext","io.mehow.ruler.format.FormattingContext.Companion.withSeparator"]},{"name":"fun withSeparator(separator: String): FormattingContext.Builder","description":"io.mehow.ruler.format.FormattingContext.Builder.withSeparator","location":"ruler/io.mehow.ruler.format/-formatting-context/-builder/with-separator.html","searchKeys":["withSeparator","fun withSeparator(separator: String): FormattingContext.Builder","io.mehow.ruler.format.FormattingContext.Builder.withSeparator"]},{"name":"fun withTranslator(translator: Translator): FormattingDriver.Builder","description":"io.mehow.ruler.format.FormattingDriver.Builder.withTranslator","location":"ruler/io.mehow.ruler.format/-formatting-driver/-builder/with-translator.html","searchKeys":["withTranslator","fun withTranslator(translator: Translator): FormattingDriver.Builder","io.mehow.ruler.format.FormattingDriver.Builder.withTranslator"]},{"name":"fun withYards(): ImperialFormatter.Builder","description":"io.mehow.ruler.format.ImperialFormatter.Builder.withYards","location":"ruler/io.mehow.ruler.format/-imperial-formatter/-builder/with-yards.html","searchKeys":["withYards","fun withYards(): ImperialFormatter.Builder","io.mehow.ruler.format.ImperialFormatter.Builder.withYards"]},{"name":"interface Translator","description":"io.mehow.ruler.format.Translator","location":"ruler/io.mehow.ruler.format/-translator/index.html","searchKeys":["Translator","interface Translator","io.mehow.ruler.format.Translator"]},{"name":"interface UnitFitter","description":"io.mehow.ruler.UnitFitter","location":"ruler/io.mehow.ruler/-unit-fitter/index.html","searchKeys":["UnitFitter","interface UnitFitter","io.mehow.ruler.UnitFitter"]},{"name":"object Centimeter : SiLengthUnit","description":"io.mehow.ruler.SiLengthUnit.Centimeter","location":"ruler/io.mehow.ruler/-si-length-unit/-centimeter/index.html","searchKeys":["Centimeter","object Centimeter : SiLengthUnit","io.mehow.ruler.SiLengthUnit.Centimeter"]},{"name":"object Companion","description":"io.mehow.ruler.Distance.Companion","location":"ruler/io.mehow.ruler/-distance/-companion/index.html","searchKeys":["Companion","object Companion","io.mehow.ruler.Distance.Companion"]},{"name":"object Companion","description":"io.mehow.ruler.ImperialLengthUnit.Companion","location":"ruler/io.mehow.ruler/-imperial-length-unit/-companion/index.html","searchKeys":["Companion","object Companion","io.mehow.ruler.ImperialLengthUnit.Companion"]},{"name":"object Companion","description":"io.mehow.ruler.Length.Companion","location":"ruler/io.mehow.ruler/-length/-companion/index.html","searchKeys":["Companion","object Companion","io.mehow.ruler.Length.Companion"]},{"name":"object Companion","description":"io.mehow.ruler.LengthUnit.Companion","location":"ruler/io.mehow.ruler/-length-unit/-companion/index.html","searchKeys":["Companion","object Companion","io.mehow.ruler.LengthUnit.Companion"]},{"name":"object Companion","description":"io.mehow.ruler.SiLengthUnit.Companion","location":"ruler/io.mehow.ruler/-si-length-unit/-companion/index.html","searchKeys":["Companion","object Companion","io.mehow.ruler.SiLengthUnit.Companion"]},{"name":"object Companion","description":"io.mehow.ruler.format.FormattingContext.Companion","location":"ruler/io.mehow.ruler.format/-formatting-context/-companion/index.html","searchKeys":["Companion","object Companion","io.mehow.ruler.format.FormattingContext.Companion"]},{"name":"object Companion","description":"io.mehow.ruler.format.ImperialFormatter.Companion","location":"ruler/io.mehow.ruler.format/-imperial-formatter/-companion/index.html","searchKeys":["Companion","object Companion","io.mehow.ruler.format.ImperialFormatter.Companion"]},{"name":"object Decameter : SiLengthUnit","description":"io.mehow.ruler.SiLengthUnit.Decameter","location":"ruler/io.mehow.ruler/-si-length-unit/-decameter/index.html","searchKeys":["Decameter","object Decameter : SiLengthUnit","io.mehow.ruler.SiLengthUnit.Decameter"]},{"name":"object DecimalFormatter : MeasureFormatter","description":"io.mehow.ruler.format.DecimalFormatter","location":"ruler/io.mehow.ruler.format/-decimal-formatter/index.html","searchKeys":["DecimalFormatter","object DecimalFormatter : MeasureFormatter","io.mehow.ruler.format.DecimalFormatter"]},{"name":"object Decimeter : SiLengthUnit","description":"io.mehow.ruler.SiLengthUnit.Decimeter","location":"ruler/io.mehow.ruler/-si-length-unit/-decimeter/index.html","searchKeys":["Decimeter","object Decimeter : SiLengthUnit","io.mehow.ruler.SiLengthUnit.Decimeter"]},{"name":"object Foot : ImperialLengthUnit","description":"io.mehow.ruler.ImperialLengthUnit.Foot","location":"ruler/io.mehow.ruler/-imperial-length-unit/-foot/index.html","searchKeys":["Foot","object Foot : ImperialLengthUnit","io.mehow.ruler.ImperialLengthUnit.Foot"]},{"name":"object Gigameter : SiLengthUnit","description":"io.mehow.ruler.SiLengthUnit.Gigameter","location":"ruler/io.mehow.ruler/-si-length-unit/-gigameter/index.html","searchKeys":["Gigameter","object Gigameter : SiLengthUnit","io.mehow.ruler.SiLengthUnit.Gigameter"]},{"name":"object Hectometer : SiLengthUnit","description":"io.mehow.ruler.SiLengthUnit.Hectometer","location":"ruler/io.mehow.ruler/-si-length-unit/-hectometer/index.html","searchKeys":["Hectometer","object Hectometer : SiLengthUnit","io.mehow.ruler.SiLengthUnit.Hectometer"]},{"name":"object InRageUnitFitter : UnitFitter","description":"io.mehow.ruler.InRageUnitFitter","location":"ruler/io.mehow.ruler/-in-rage-unit-fitter/index.html","searchKeys":["InRageUnitFitter","object InRageUnitFitter : UnitFitter","io.mehow.ruler.InRageUnitFitter"]},{"name":"object Inch : ImperialLengthUnit","description":"io.mehow.ruler.ImperialLengthUnit.Inch","location":"ruler/io.mehow.ruler/-imperial-length-unit/-inch/index.html","searchKeys":["Inch","object Inch : ImperialLengthUnit","io.mehow.ruler.ImperialLengthUnit.Inch"]},{"name":"object Kilometer : SiLengthUnit","description":"io.mehow.ruler.SiLengthUnit.Kilometer","location":"ruler/io.mehow.ruler/-si-length-unit/-kilometer/index.html","searchKeys":["Kilometer","object Kilometer : SiLengthUnit","io.mehow.ruler.SiLengthUnit.Kilometer"]},{"name":"object LogDistanceUnitFitter : UnitFitter","description":"io.mehow.ruler.LogDistanceUnitFitter","location":"ruler/io.mehow.ruler/-log-distance-unit-fitter/index.html","searchKeys":["LogDistanceUnitFitter","object LogDistanceUnitFitter : UnitFitter","io.mehow.ruler.LogDistanceUnitFitter"]},{"name":"object Megameter : SiLengthUnit","description":"io.mehow.ruler.SiLengthUnit.Megameter","location":"ruler/io.mehow.ruler/-si-length-unit/-megameter/index.html","searchKeys":["Megameter","object Megameter : SiLengthUnit","io.mehow.ruler.SiLengthUnit.Megameter"]},{"name":"object Meter : SiLengthUnit","description":"io.mehow.ruler.SiLengthUnit.Meter","location":"ruler/io.mehow.ruler/-si-length-unit/-meter/index.html","searchKeys":["Meter","object Meter : SiLengthUnit","io.mehow.ruler.SiLengthUnit.Meter"]},{"name":"object Micrometer : SiLengthUnit","description":"io.mehow.ruler.SiLengthUnit.Micrometer","location":"ruler/io.mehow.ruler/-si-length-unit/-micrometer/index.html","searchKeys":["Micrometer","object Micrometer : SiLengthUnit","io.mehow.ruler.SiLengthUnit.Micrometer"]},{"name":"object Mile : ImperialLengthUnit","description":"io.mehow.ruler.ImperialLengthUnit.Mile","location":"ruler/io.mehow.ruler/-imperial-length-unit/-mile/index.html","searchKeys":["Mile","object Mile : ImperialLengthUnit","io.mehow.ruler.ImperialLengthUnit.Mile"]},{"name":"object Millimeter : SiLengthUnit","description":"io.mehow.ruler.SiLengthUnit.Millimeter","location":"ruler/io.mehow.ruler/-si-length-unit/-millimeter/index.html","searchKeys":["Millimeter","object Millimeter : SiLengthUnit","io.mehow.ruler.SiLengthUnit.Millimeter"]},{"name":"object Nanometer : SiLengthUnit","description":"io.mehow.ruler.SiLengthUnit.Nanometer","location":"ruler/io.mehow.ruler/-si-length-unit/-nanometer/index.html","searchKeys":["Nanometer","object Nanometer : SiLengthUnit","io.mehow.ruler.SiLengthUnit.Nanometer"]},{"name":"object NoOpFormatter : LengthFormatter","description":"io.mehow.ruler.format.NoOpFormatter","location":"ruler/io.mehow.ruler.format/-no-op-formatter/index.html","searchKeys":["NoOpFormatter","object NoOpFormatter : LengthFormatter","io.mehow.ruler.format.NoOpFormatter"]},{"name":"object Ruler : LengthConverter, LengthFormatter","description":"io.mehow.ruler.Ruler","location":"ruler/io.mehow.ruler/-ruler/index.html","searchKeys":["Ruler","object Ruler : LengthConverter, LengthFormatter","io.mehow.ruler.Ruler"]},{"name":"object Yard : ImperialLengthUnit","description":"io.mehow.ruler.ImperialLengthUnit.Yard","location":"ruler/io.mehow.ruler/-imperial-length-unit/-yard/index.html","searchKeys":["Yard","object Yard : ImperialLengthUnit","io.mehow.ruler.ImperialLengthUnit.Yard"]},{"name":"open operator override fun compareTo(other: Distance): Int","description":"io.mehow.ruler.Distance.compareTo","location":"ruler/io.mehow.ruler/-distance/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Distance): Int","io.mehow.ruler.Distance.compareTo"]},{"name":"open operator override fun compareTo(other: Length<*>): Int","description":"io.mehow.ruler.Length.compareTo","location":"ruler/io.mehow.ruler/-length/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Length<*>): Int","io.mehow.ruler.Length.compareTo"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"io.mehow.ruler.Distance.equals","location":"ruler/io.mehow.ruler/-distance/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","io.mehow.ruler.Distance.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"io.mehow.ruler.Length.equals","location":"ruler/io.mehow.ruler/-length/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","io.mehow.ruler.Length.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"io.mehow.ruler.Measure.equals","location":"ruler/io.mehow.ruler/-measure/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","io.mehow.ruler.Measure.equals"]},{"name":"open override fun <T : LengthUnit<T>> findFit(units: Iterable<T>, length: Length<T>): T?","description":"io.mehow.ruler.InRageUnitFitter.findFit","location":"ruler/io.mehow.ruler/-in-rage-unit-fitter/find-fit.html","searchKeys":["findFit","open override fun <T : LengthUnit<T>> findFit(units: Iterable<T>, length: Length<T>): T?","io.mehow.ruler.InRageUnitFitter.findFit"]},{"name":"open override fun <T : LengthUnit<T>> findFit(units: Iterable<T>, length: Length<T>): T?","description":"io.mehow.ruler.LogDistanceUnitFitter.findFit","location":"ruler/io.mehow.ruler/-log-distance-unit-fitter/find-fit.html","searchKeys":["findFit","open override fun <T : LengthUnit<T>> findFit(units: Iterable<T>, length: Length<T>): T?","io.mehow.ruler.LogDistanceUnitFitter.findFit"]},{"name":"open override fun convert(length: Length<*>): Length<*>","description":"io.mehow.ruler.Ruler.convert","location":"ruler/io.mehow.ruler/-ruler/convert.html","searchKeys":["convert","open override fun convert(length: Length<*>): Length<*>","io.mehow.ruler.Ruler.convert"]},{"name":"open override fun convert(length: Length<*>): Length<*>","description":"io.mehow.ruler.format.AutoFitConverter.convert","location":"ruler/io.mehow.ruler.format/-auto-fit-converter/convert.html","searchKeys":["convert","open override fun convert(length: Length<*>): Length<*>","io.mehow.ruler.format.AutoFitConverter.convert"]},{"name":"open override fun format(length: Length<*>, driver: FormattingDriver): String","description":"io.mehow.ruler.Ruler.format","location":"ruler/io.mehow.ruler/-ruler/format.html","searchKeys":["format","open override fun format(length: Length<*>, driver: FormattingDriver): String","io.mehow.ruler.Ruler.format"]},{"name":"open override fun format(length: Length<*>, driver: FormattingDriver): String","description":"io.mehow.ruler.format.ImperialFormatter.format","location":"ruler/io.mehow.ruler.format/-imperial-formatter/format.html","searchKeys":["format","open override fun format(length: Length<*>, driver: FormattingDriver): String","io.mehow.ruler.format.ImperialFormatter.format"]},{"name":"open override fun format(length: Length<*>, driver: FormattingDriver): String","description":"io.mehow.ruler.format.NoOpFormatter.format","location":"ruler/io.mehow.ruler.format/-no-op-formatter/format.html","searchKeys":["format","open override fun format(length: Length<*>, driver: FormattingDriver): String","io.mehow.ruler.format.NoOpFormatter.format"]},{"name":"open override fun format(measure: Measure<LengthUnit<*>>, context: MeasureContext): String","description":"io.mehow.ruler.format.DecimalFormatter.format","location":"ruler/io.mehow.ruler.format/-decimal-formatter/format.html","searchKeys":["format","open override fun format(measure: Measure<LengthUnit<*>>, context: MeasureContext): String","io.mehow.ruler.format.DecimalFormatter.format"]},{"name":"open override fun hashCode(): Int","description":"io.mehow.ruler.Distance.hashCode","location":"ruler/io.mehow.ruler/-distance/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","io.mehow.ruler.Distance.hashCode"]},{"name":"open override fun hashCode(): Int","description":"io.mehow.ruler.Length.hashCode","location":"ruler/io.mehow.ruler/-length/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","io.mehow.ruler.Length.hashCode"]},{"name":"open override fun hashCode(): Int","description":"io.mehow.ruler.Measure.hashCode","location":"ruler/io.mehow.ruler/-measure/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","io.mehow.ruler.Measure.hashCode"]},{"name":"open override fun toString(): String","description":"io.mehow.ruler.Distance.toString","location":"ruler/io.mehow.ruler/-distance/to-string.html","searchKeys":["toString","open override fun toString(): String","io.mehow.ruler.Distance.toString"]},{"name":"open override fun toString(): String","description":"io.mehow.ruler.Length.toString","location":"ruler/io.mehow.ruler/-length/to-string.html","searchKeys":["toString","open override fun toString(): String","io.mehow.ruler.Length.toString"]},{"name":"open override fun toString(): String","description":"io.mehow.ruler.Measure.toString","location":"ruler/io.mehow.ruler/-measure/to-string.html","searchKeys":["toString","open override fun toString(): String","io.mehow.ruler.Measure.toString"]},{"name":"open override val units: List<ImperialLengthUnit>","description":"io.mehow.ruler.ImperialLengthUnit.units","location":"ruler/io.mehow.ruler/-imperial-length-unit/units.html","searchKeys":["units","open override val units: List<ImperialLengthUnit>","io.mehow.ruler.ImperialLengthUnit.units"]},{"name":"open override val units: List<SiLengthUnit>","description":"io.mehow.ruler.SiLengthUnit.units","location":"ruler/io.mehow.ruler/-si-length-unit/units.html","searchKeys":["units","open override val units: List<SiLengthUnit>","io.mehow.ruler.SiLengthUnit.units"]},{"name":"operator fun contains(distance: Distance): Boolean","description":"io.mehow.ruler.LengthUnit.contains","location":"ruler/io.mehow.ruler/-length-unit/contains.html","searchKeys":["contains","operator fun contains(distance: Distance): Boolean","io.mehow.ruler.LengthUnit.contains"]},{"name":"operator fun contains(length: Length<*>): Boolean","description":"io.mehow.ruler.LengthUnit.contains","location":"ruler/io.mehow.ruler/-length-unit/contains.html","searchKeys":["contains","operator fun contains(length: Length<*>): Boolean","io.mehow.ruler.LengthUnit.contains"]},{"name":"operator fun div(divisor: Double): Distance","description":"io.mehow.ruler.Distance.div","location":"ruler/io.mehow.ruler/-distance/div.html","searchKeys":["div","operator fun div(divisor: Double): Distance","io.mehow.ruler.Distance.div"]},{"name":"operator fun div(divisor: Double): Length<T>","description":"io.mehow.ruler.Length.div","location":"ruler/io.mehow.ruler/-length/div.html","searchKeys":["div","operator fun div(divisor: Double): Length<T>","io.mehow.ruler.Length.div"]},{"name":"operator fun div(divisor: Float): Distance","description":"io.mehow.ruler.Distance.div","location":"ruler/io.mehow.ruler/-distance/div.html","searchKeys":["div","operator fun div(divisor: Float): Distance","io.mehow.ruler.Distance.div"]},{"name":"operator fun div(divisor: Float): Length<T>","description":"io.mehow.ruler.Length.div","location":"ruler/io.mehow.ruler/-length/div.html","searchKeys":["div","operator fun div(divisor: Float): Length<T>","io.mehow.ruler.Length.div"]},{"name":"operator fun div(divisor: Int): Distance","description":"io.mehow.ruler.Distance.div","location":"ruler/io.mehow.ruler/-distance/div.html","searchKeys":["div","operator fun div(divisor: Int): Distance","io.mehow.ruler.Distance.div"]},{"name":"operator fun div(divisor: Int): Length<T>","description":"io.mehow.ruler.Length.div","location":"ruler/io.mehow.ruler/-length/div.html","searchKeys":["div","operator fun div(divisor: Int): Length<T>","io.mehow.ruler.Length.div"]},{"name":"operator fun div(divisor: Long): Distance","description":"io.mehow.ruler.Distance.div","location":"ruler/io.mehow.ruler/-distance/div.html","searchKeys":["div","operator fun div(divisor: Long): Distance","io.mehow.ruler.Distance.div"]},{"name":"operator fun div(divisor: Long): Length<T>","description":"io.mehow.ruler.Length.div","location":"ruler/io.mehow.ruler/-length/div.html","searchKeys":["div","operator fun div(divisor: Long): Length<T>","io.mehow.ruler.Length.div"]},{"name":"operator fun minus(distance: Distance): Length<T>","description":"io.mehow.ruler.Length.minus","location":"ruler/io.mehow.ruler/-length/minus.html","searchKeys":["minus","operator fun minus(distance: Distance): Length<T>","io.mehow.ruler.Length.minus"]},{"name":"operator fun minus(length: Length<*>): Distance","description":"io.mehow.ruler.Distance.minus","location":"ruler/io.mehow.ruler/-distance/minus.html","searchKeys":["minus","operator fun minus(length: Length<*>): Distance","io.mehow.ruler.Distance.minus"]},{"name":"operator fun minus(other: Distance): Distance","description":"io.mehow.ruler.Distance.minus","location":"ruler/io.mehow.ruler/-distance/minus.html","searchKeys":["minus","operator fun minus(other: Distance): Distance","io.mehow.ruler.Distance.minus"]},{"name":"operator fun minus(other: Length<*>): Length<T>","description":"io.mehow.ruler.Length.minus","location":"ruler/io.mehow.ruler/-length/minus.html","searchKeys":["minus","operator fun minus(other: Length<*>): Length<T>","io.mehow.ruler.Length.minus"]},{"name":"operator fun plus(distance: Distance): Length<T>","description":"io.mehow.ruler.Length.plus","location":"ruler/io.mehow.ruler/-length/plus.html","searchKeys":["plus","operator fun plus(distance: Distance): Length<T>","io.mehow.ruler.Length.plus"]},{"name":"operator fun plus(length: Length<*>): Distance","description":"io.mehow.ruler.Distance.plus","location":"ruler/io.mehow.ruler/-distance/plus.html","searchKeys":["plus","operator fun plus(length: Length<*>): Distance","io.mehow.ruler.Distance.plus"]},{"name":"operator fun plus(other: Distance): Distance","description":"io.mehow.ruler.Distance.plus","location":"ruler/io.mehow.ruler/-distance/plus.html","searchKeys":["plus","operator fun plus(other: Distance): Distance","io.mehow.ruler.Distance.plus"]},{"name":"operator fun plus(other: Length<*>): Length<T>","description":"io.mehow.ruler.Length.plus","location":"ruler/io.mehow.ruler/-length/plus.html","searchKeys":["plus","operator fun plus(other: Length<*>): Length<T>","io.mehow.ruler.Length.plus"]},{"name":"operator fun times(multiplicand: Double): Distance","description":"io.mehow.ruler.Distance.times","location":"ruler/io.mehow.ruler/-distance/times.html","searchKeys":["times","operator fun times(multiplicand: Double): Distance","io.mehow.ruler.Distance.times"]},{"name":"operator fun times(multiplicand: Double): Length<T>","description":"io.mehow.ruler.Length.times","location":"ruler/io.mehow.ruler/-length/times.html","searchKeys":["times","operator fun times(multiplicand: Double): Length<T>","io.mehow.ruler.Length.times"]},{"name":"operator fun times(multiplicand: Float): Distance","description":"io.mehow.ruler.Distance.times","location":"ruler/io.mehow.ruler/-distance/times.html","searchKeys":["times","operator fun times(multiplicand: Float): Distance","io.mehow.ruler.Distance.times"]},{"name":"operator fun times(multiplicand: Float): Length<T>","description":"io.mehow.ruler.Length.times","location":"ruler/io.mehow.ruler/-length/times.html","searchKeys":["times","operator fun times(multiplicand: Float): Length<T>","io.mehow.ruler.Length.times"]},{"name":"operator fun times(multiplicand: Int): Distance","description":"io.mehow.ruler.Distance.times","location":"ruler/io.mehow.ruler/-distance/times.html","searchKeys":["times","operator fun times(multiplicand: Int): Distance","io.mehow.ruler.Distance.times"]},{"name":"operator fun times(multiplicand: Int): Length<T>","description":"io.mehow.ruler.Length.times","location":"ruler/io.mehow.ruler/-length/times.html","searchKeys":["times","operator fun times(multiplicand: Int): Length<T>","io.mehow.ruler.Length.times"]},{"name":"operator fun times(multiplicand: Long): Distance","description":"io.mehow.ruler.Distance.times","location":"ruler/io.mehow.ruler/-distance/times.html","searchKeys":["times","operator fun times(multiplicand: Long): Distance","io.mehow.ruler.Distance.times"]},{"name":"operator fun times(multiplicand: Long): Length<T>","description":"io.mehow.ruler.Length.times","location":"ruler/io.mehow.ruler/-length/times.html","searchKeys":["times","operator fun times(multiplicand: Long): Length<T>","io.mehow.ruler.Length.times"]},{"name":"operator fun unaryMinus(): Distance","description":"io.mehow.ruler.Distance.unaryMinus","location":"ruler/io.mehow.ruler/-distance/unary-minus.html","searchKeys":["unaryMinus","operator fun unaryMinus(): Distance","io.mehow.ruler.Distance.unaryMinus"]},{"name":"operator fun unaryMinus(): Length<T>","description":"io.mehow.ruler.Length.unaryMinus","location":"ruler/io.mehow.ruler/-length/unary-minus.html","searchKeys":["unaryMinus","operator fun unaryMinus(): Length<T>","io.mehow.ruler.Length.unaryMinus"]},{"name":"operator override fun compareTo(other: T): Int","description":"io.mehow.ruler.LengthUnit.compareTo","location":"ruler/io.mehow.ruler/-length-unit/compare-to.html","searchKeys":["compareTo","operator override fun compareTo(other: T): Int","io.mehow.ruler.LengthUnit.compareTo"]},{"name":"override fun toString(): String","description":"io.mehow.ruler.LengthUnit.toString","location":"ruler/io.mehow.ruler/-length-unit/to-string.html","searchKeys":["toString","override fun toString(): String","io.mehow.ruler.LengthUnit.toString"]},{"name":"sealed class ImperialLengthUnit : LengthUnit<ImperialLengthUnit> ","description":"io.mehow.ruler.ImperialLengthUnit","location":"ruler/io.mehow.ruler/-imperial-length-unit/index.html","searchKeys":["ImperialLengthUnit","sealed class ImperialLengthUnit : LengthUnit<ImperialLengthUnit> ","io.mehow.ruler.ImperialLengthUnit"]},{"name":"sealed class LengthUnit<T : LengthUnit<T>> : Comparable<T> ","description":"io.mehow.ruler.LengthUnit","location":"ruler/io.mehow.ruler/-length-unit/index.html","searchKeys":["LengthUnit","sealed class LengthUnit<T : LengthUnit<T>> : Comparable<T> ","io.mehow.ruler.LengthUnit"]},{"name":"sealed class SiLengthUnit : LengthUnit<SiLengthUnit> ","description":"io.mehow.ruler.SiLengthUnit","location":"ruler/io.mehow.ruler/-si-length-unit/index.html","searchKeys":["SiLengthUnit","sealed class SiLengthUnit : LengthUnit<SiLengthUnit> ","io.mehow.ruler.SiLengthUnit"]},{"name":"val Epsilon: Distance","description":"io.mehow.ruler.Distance.Companion.Epsilon","location":"ruler/io.mehow.ruler/-distance/-companion/-epsilon.html","searchKeys":["Epsilon","val Epsilon: Distance","io.mehow.ruler.Distance.Companion.Epsilon"]},{"name":"val Full: ImperialFormatter","description":"io.mehow.ruler.format.ImperialFormatter.Companion.Full","location":"ruler/io.mehow.ruler.format/-imperial-formatter/-companion/-full.html","searchKeys":["Full","val Full: ImperialFormatter","io.mehow.ruler.format.ImperialFormatter.Companion.Full"]},{"name":"val Max: Distance","description":"io.mehow.ruler.Distance.Companion.Max","location":"ruler/io.mehow.ruler/-distance/-companion/-max.html","searchKeys":["Max","val Max: Distance","io.mehow.ruler.Distance.Companion.Max"]},{"name":"val Min: Distance","description":"io.mehow.ruler.Distance.Companion.Min","location":"ruler/io.mehow.ruler/-distance/-companion/-min.html","searchKeys":["Min","val Min: Distance","io.mehow.ruler.Distance.Companion.Min"]},{"name":"val Zero: Distance","description":"io.mehow.ruler.Distance.Companion.Zero","location":"ruler/io.mehow.ruler/-distance/-companion/-zero.html","searchKeys":["Zero","val Zero: Distance","io.mehow.ruler.Distance.Companion.Zero"]},{"name":"val bounds: ClosedRange<Distance>","description":"io.mehow.ruler.LengthUnit.bounds","location":"ruler/io.mehow.ruler/-length-unit/bounds.html","searchKeys":["bounds","val bounds: ClosedRange<Distance>","io.mehow.ruler.LengthUnit.bounds"]},{"name":"val dimension: T","description":"io.mehow.ruler.Measure.dimension","location":"ruler/io.mehow.ruler/-measure/dimension.html","searchKeys":["dimension","val dimension: T","io.mehow.ruler.Measure.dimension"]},{"name":"val distance: Distance","description":"io.mehow.ruler.Length.distance","location":"ruler/io.mehow.ruler/-length/distance.html","searchKeys":["distance","val distance: Distance","io.mehow.ruler.Length.distance"]},{"name":"val formattingContext: FormattingContext","description":"io.mehow.ruler.format.FormattingDriver.formattingContext","location":"ruler/io.mehow.ruler.format/-formatting-driver/formatting-context.html","searchKeys":["formattingContext","val formattingContext: FormattingContext","io.mehow.ruler.format.FormattingDriver.formattingContext"]},{"name":"val fractionalPrecision: Int","description":"io.mehow.ruler.format.FormattingContext.fractionalPrecision","location":"ruler/io.mehow.ruler.format/-formatting-context/fractional-precision.html","searchKeys":["fractionalPrecision","val fractionalPrecision: Int","io.mehow.ruler.format.FormattingContext.fractionalPrecision"]},{"name":"val fractionalPrecision: Int","description":"io.mehow.ruler.format.MeasureContext.fractionalPrecision","location":"ruler/io.mehow.ruler.format/-measure-context/fractional-precision.html","searchKeys":["fractionalPrecision","val fractionalPrecision: Int","io.mehow.ruler.format.MeasureContext.fractionalPrecision"]},{"name":"val installedConverterFactories: List<LengthConverter.Factory>","description":"io.mehow.ruler.Ruler.installedConverterFactories","location":"ruler/io.mehow.ruler/-ruler/installed-converter-factories.html","searchKeys":["installedConverterFactories","val installedConverterFactories: List<LengthConverter.Factory>","io.mehow.ruler.Ruler.installedConverterFactories"]},{"name":"val installedFormatterFactories: List<LengthFormatter.Factory>","description":"io.mehow.ruler.Ruler.installedFormatterFactories","location":"ruler/io.mehow.ruler/-ruler/installed-formatter-factories.html","searchKeys":["installedFormatterFactories","val installedFormatterFactories: List<LengthFormatter.Factory>","io.mehow.ruler.Ruler.installedFormatterFactories"]},{"name":"val installedImperialCountryCodes: Set<String>","description":"io.mehow.ruler.Ruler.installedImperialCountryCodes","location":"ruler/io.mehow.ruler/-ruler/installed-imperial-country-codes.html","searchKeys":["installedImperialCountryCodes","val installedImperialCountryCodes: Set<String>","io.mehow.ruler.Ruler.installedImperialCountryCodes"]},{"name":"val locale: Locale","description":"io.mehow.ruler.format.MeasureContext.locale","location":"ruler/io.mehow.ruler.format/-measure-context/locale.html","searchKeys":["locale","val locale: Locale","io.mehow.ruler.format.MeasureContext.locale"]},{"name":"val measure: Measure<T>","description":"io.mehow.ruler.Length.measure","location":"ruler/io.mehow.ruler/-length/measure.html","searchKeys":["measure","val measure: Measure<T>","io.mehow.ruler.Length.measure"]},{"name":"val meterRatio: BigDecimal","description":"io.mehow.ruler.LengthUnit.meterRatio","location":"ruler/io.mehow.ruler/-length-unit/meter-ratio.html","searchKeys":["meterRatio","val meterRatio: BigDecimal","io.mehow.ruler.LengthUnit.meterRatio"]},{"name":"val meters: BigDecimal","description":"io.mehow.ruler.Distance.meters","location":"ruler/io.mehow.ruler/-distance/meters.html","searchKeys":["meters","val meters: BigDecimal","io.mehow.ruler.Distance.meters"]},{"name":"val unit: T","description":"io.mehow.ruler.Length.unit","location":"ruler/io.mehow.ruler/-length/unit.html","searchKeys":["unit","val unit: T","io.mehow.ruler.Length.unit"]},{"name":"val unitSeparator: String","description":"io.mehow.ruler.format.FormattingContext.unitSeparator","location":"ruler/io.mehow.ruler.format/-formatting-context/unit-separator.html","searchKeys":["unitSeparator","val unitSeparator: String","io.mehow.ruler.format.FormattingContext.unitSeparator"]},{"name":"val units: List<ImperialLengthUnit>","description":"io.mehow.ruler.ImperialLengthUnit.Companion.units","location":"ruler/io.mehow.ruler/-imperial-length-unit/-companion/units.html","searchKeys":["units","val units: List<ImperialLengthUnit>","io.mehow.ruler.ImperialLengthUnit.Companion.units"]},{"name":"val units: List<LengthUnit<*>>","description":"io.mehow.ruler.LengthUnit.Companion.units","location":"ruler/io.mehow.ruler/-length-unit/-companion/units.html","searchKeys":["units","val units: List<LengthUnit<*>>","io.mehow.ruler.LengthUnit.Companion.units"]},{"name":"val units: List<SiLengthUnit>","description":"io.mehow.ruler.SiLengthUnit.Companion.units","location":"ruler/io.mehow.ruler/-si-length-unit/-companion/units.html","searchKeys":["units","val units: List<SiLengthUnit>","io.mehow.ruler.SiLengthUnit.Companion.units"]},{"name":"val value: BigDecimal","description":"io.mehow.ruler.Measure.value","location":"ruler/io.mehow.ruler/-measure/value.html","searchKeys":["value","val value: BigDecimal","io.mehow.ruler.Measure.value"]},{"name":"var driver: FormattingDriver","description":"io.mehow.ruler.Ruler.driver","location":"ruler/io.mehow.ruler/-ruler/driver.html","searchKeys":["driver","var driver: FormattingDriver","io.mehow.ruler.Ruler.driver"]},{"name":"var isUkImperial: Boolean","description":"io.mehow.ruler.Ruler.isUkImperial","location":"ruler/io.mehow.ruler/-ruler/is-uk-imperial.html","searchKeys":["isUkImperial","var isUkImperial: Boolean","io.mehow.ruler.Ruler.isUkImperial"]},{"name":"var useImperialFormatter: Boolean = true","description":"io.mehow.ruler.Ruler.useImperialFormatter","location":"ruler/io.mehow.ruler/-ruler/use-imperial-formatter.html","searchKeys":["useImperialFormatter","var useImperialFormatter: Boolean = true","io.mehow.ruler.Ruler.useImperialFormatter"]}]
