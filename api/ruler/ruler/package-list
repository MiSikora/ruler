$dokka.format:html-v1
$dokka.linkExtension:html
$dokka.location:io.mehow.ruler.format////PointingToDeclaration/ruler/io.mehow.ruler.format/index.html
$dokka.location:io.mehow.ruler.format/AutoFitConverter///PointingToDeclaration/ruler/io.mehow.ruler.format/-auto-fit-converter/index.html
$dokka.location:io.mehow.ruler.format/AutoFitConverter/AutoFitConverter/#kotlin.collections.List[io.mehow.ruler.SiLengthUnit]#kotlin.collections.List[io.mehow.ruler.ImperialLengthUnit]/PointingToDeclaration/ruler/io.mehow.ruler.format/-auto-fit-converter/-auto-fit-converter.html
$dokka.location:io.mehow.ruler.format/AutoFitConverter/convert/#io.mehow.ruler.Length[*]/PointingToDeclaration/ruler/io.mehow.ruler.format/-auto-fit-converter/convert.html
$dokka.location:io.mehow.ruler.format/DecimalFormatter///PointingToDeclaration/ruler/io.mehow.ruler.format/-decimal-formatter/index.html
$dokka.location:io.mehow.ruler.format/DecimalFormatter/format/#io.mehow.ruler.Measure[io.mehow.ruler.LengthUnit[*]]#io.mehow.ruler.format.MeasureContext/PointingToDeclaration/ruler/io.mehow.ruler.format/-decimal-formatter/format.html
$dokka.location:io.mehow.ruler.format/FormattingContext.Builder///PointingToDeclaration/ruler/io.mehow.ruler.format/-formatting-context/-builder/index.html
$dokka.location:io.mehow.ruler.format/FormattingContext.Builder/Builder/#/PointingToDeclaration/ruler/io.mehow.ruler.format/-formatting-context/-builder/-builder.html
$dokka.location:io.mehow.ruler.format/FormattingContext.Builder/build/#/PointingToDeclaration/ruler/io.mehow.ruler.format/-formatting-context/-builder/build.html
$dokka.location:io.mehow.ruler.format/FormattingContext.Builder/withPrecision/#kotlin.Int/PointingToDeclaration/ruler/io.mehow.ruler.format/-formatting-context/-builder/with-precision.html
$dokka.location:io.mehow.ruler.format/FormattingContext.Builder/withSeparator/#kotlin.String/PointingToDeclaration/ruler/io.mehow.ruler.format/-formatting-context/-builder/with-separator.html
$dokka.location:io.mehow.ruler.format/FormattingContext.Companion///PointingToDeclaration/ruler/io.mehow.ruler.format/-formatting-context/-companion/index.html
$dokka.location:io.mehow.ruler.format/FormattingContext.Companion/withPrecision/#kotlin.Int/PointingToDeclaration/ruler/io.mehow.ruler.format/-formatting-context/-companion/with-precision.html
$dokka.location:io.mehow.ruler.format/FormattingContext.Companion/withSeparator/#kotlin.String/PointingToDeclaration/ruler/io.mehow.ruler.format/-formatting-context/-companion/with-separator.html
$dokka.location:io.mehow.ruler.format/FormattingContext///PointingToDeclaration/ruler/io.mehow.ruler.format/-formatting-context/index.html
$dokka.location:io.mehow.ruler.format/FormattingContext/fractionalPrecision/#/PointingToDeclaration/ruler/io.mehow.ruler.format/-formatting-context/fractional-precision.html
$dokka.location:io.mehow.ruler.format/FormattingContext/newBuilder/#/PointingToDeclaration/ruler/io.mehow.ruler.format/-formatting-context/new-builder.html
$dokka.location:io.mehow.ruler.format/FormattingContext/unitSeparator/#/PointingToDeclaration/ruler/io.mehow.ruler.format/-formatting-context/unit-separator.html
$dokka.location:io.mehow.ruler.format/FormattingDriver.Builder///PointingToDeclaration/ruler/io.mehow.ruler.format/-formatting-driver/-builder/index.html
$dokka.location:io.mehow.ruler.format/FormattingDriver.Builder/Builder/#/PointingToDeclaration/ruler/io.mehow.ruler.format/-formatting-driver/-builder/-builder.html
$dokka.location:io.mehow.ruler.format/FormattingDriver.Builder/build/#/PointingToDeclaration/ruler/io.mehow.ruler.format/-formatting-driver/-builder/build.html
$dokka.location:io.mehow.ruler.format/FormattingDriver.Builder/withFormattingContext/#io.mehow.ruler.format.FormattingContext/PointingToDeclaration/ruler/io.mehow.ruler.format/-formatting-driver/-builder/with-formatting-context.html
$dokka.location:io.mehow.ruler.format/FormattingDriver.Builder/withMeasureFormatter/#io.mehow.ruler.format.MeasureFormatter/PointingToDeclaration/ruler/io.mehow.ruler.format/-formatting-driver/-builder/with-measure-formatter.html
$dokka.location:io.mehow.ruler.format/FormattingDriver.Builder/withTranslator/#io.mehow.ruler.format.Translator/PointingToDeclaration/ruler/io.mehow.ruler.format/-formatting-driver/-builder/with-translator.html
$dokka.location:io.mehow.ruler.format/FormattingDriver///PointingToDeclaration/ruler/io.mehow.ruler.format/-formatting-driver/index.html
$dokka.location:io.mehow.ruler.format/FormattingDriver/format/#io.mehow.ruler.Length[*]#io.mehow.ruler.format.FormattingContext/PointingToDeclaration/ruler/io.mehow.ruler.format/-formatting-driver/format.html
$dokka.location:io.mehow.ruler.format/FormattingDriver/formattingContext/#/PointingToDeclaration/ruler/io.mehow.ruler.format/-formatting-driver/formatting-context.html
$dokka.location:io.mehow.ruler.format/FormattingDriver/newBuilder/#/PointingToDeclaration/ruler/io.mehow.ruler.format/-formatting-driver/new-builder.html
$dokka.location:io.mehow.ruler.format/ImperialFormatter.Builder///PointingToDeclaration/ruler/io.mehow.ruler.format/-imperial-formatter/-builder/index.html
$dokka.location:io.mehow.ruler.format/ImperialFormatter.Builder/Builder/#/PointingToDeclaration/ruler/io.mehow.ruler.format/-imperial-formatter/-builder/-builder.html
$dokka.location:io.mehow.ruler.format/ImperialFormatter.Builder/build/#/PointingToDeclaration/ruler/io.mehow.ruler.format/-imperial-formatter/-builder/build.html
$dokka.location:io.mehow.ruler.format/ImperialFormatter.Builder/withFallbackUnit/#io.mehow.ruler.ImperialLengthUnit/PointingToDeclaration/ruler/io.mehow.ruler.format/-imperial-formatter/-builder/with-fallback-unit.html
$dokka.location:io.mehow.ruler.format/ImperialFormatter.Builder/withFeet/#/PointingToDeclaration/ruler/io.mehow.ruler.format/-imperial-formatter/-builder/with-feet.html
$dokka.location:io.mehow.ruler.format/ImperialFormatter.Builder/withInches/#/PointingToDeclaration/ruler/io.mehow.ruler.format/-imperial-formatter/-builder/with-inches.html
$dokka.location:io.mehow.ruler.format/ImperialFormatter.Builder/withMiles/#/PointingToDeclaration/ruler/io.mehow.ruler.format/-imperial-formatter/-builder/with-miles.html
$dokka.location:io.mehow.ruler.format/ImperialFormatter.Builder/withPartSeparator/#kotlin.String/PointingToDeclaration/ruler/io.mehow.ruler.format/-imperial-formatter/-builder/with-part-separator.html
$dokka.location:io.mehow.ruler.format/ImperialFormatter.Builder/withYards/#/PointingToDeclaration/ruler/io.mehow.ruler.format/-imperial-formatter/-builder/with-yards.html
$dokka.location:io.mehow.ruler.format/ImperialFormatter.Companion///PointingToDeclaration/ruler/io.mehow.ruler.format/-imperial-formatter/-companion/index.html
$dokka.location:io.mehow.ruler.format/ImperialFormatter.Companion/Full/#/PointingToDeclaration/ruler/io.mehow.ruler.format/-imperial-formatter/-companion/-full.html
$dokka.location:io.mehow.ruler.format/ImperialFormatter///PointingToDeclaration/ruler/io.mehow.ruler.format/-imperial-formatter/index.html
$dokka.location:io.mehow.ruler.format/ImperialFormatter/format/#io.mehow.ruler.Length[*]#io.mehow.ruler.format.FormattingDriver/PointingToDeclaration/ruler/io.mehow.ruler.format/-imperial-formatter/format.html
$dokka.location:io.mehow.ruler.format/LengthConverter.Factory///PointingToDeclaration/ruler/io.mehow.ruler.format/-length-converter/-factory/index.html
$dokka.location:io.mehow.ruler.format/LengthConverter.Factory/create/#io.mehow.ruler.Length[*]/PointingToDeclaration/ruler/io.mehow.ruler.format/-length-converter/-factory/create.html
$dokka.location:io.mehow.ruler.format/LengthConverter///PointingToDeclaration/ruler/io.mehow.ruler.format/-length-converter/index.html
$dokka.location:io.mehow.ruler.format/LengthConverter/convert/#io.mehow.ruler.Length[*]/PointingToDeclaration/ruler/io.mehow.ruler.format/-length-converter/convert.html
$dokka.location:io.mehow.ruler.format/LengthFormatter.Factory///PointingToDeclaration/ruler/io.mehow.ruler.format/-length-formatter/-factory/index.html
$dokka.location:io.mehow.ruler.format/LengthFormatter.Factory/create/#io.mehow.ruler.Length[*]#io.mehow.ruler.format.FormattingContext/PointingToDeclaration/ruler/io.mehow.ruler.format/-length-formatter/-factory/create.html
$dokka.location:io.mehow.ruler.format/LengthFormatter///PointingToDeclaration/ruler/io.mehow.ruler.format/-length-formatter/index.html
$dokka.location:io.mehow.ruler.format/LengthFormatter/format/#io.mehow.ruler.Length[*]#io.mehow.ruler.format.FormattingDriver/PointingToDeclaration/ruler/io.mehow.ruler.format/-length-formatter/format.html
$dokka.location:io.mehow.ruler.format/MeasureContext///PointingToDeclaration/ruler/io.mehow.ruler.format/-measure-context/index.html
$dokka.location:io.mehow.ruler.format/MeasureContext/fractionalPrecision/#/PointingToDeclaration/ruler/io.mehow.ruler.format/-measure-context/fractional-precision.html
$dokka.location:io.mehow.ruler.format/MeasureContext/locale/#/PointingToDeclaration/ruler/io.mehow.ruler.format/-measure-context/locale.html
$dokka.location:io.mehow.ruler.format/MeasureFormatter///PointingToDeclaration/ruler/io.mehow.ruler.format/-measure-formatter/index.html
$dokka.location:io.mehow.ruler.format/MeasureFormatter/format/#io.mehow.ruler.Measure[io.mehow.ruler.LengthUnit[*]]#io.mehow.ruler.format.MeasureContext/PointingToDeclaration/ruler/io.mehow.ruler.format/-measure-formatter/format.html
$dokka.location:io.mehow.ruler.format/NoOpFormatter///PointingToDeclaration/ruler/io.mehow.ruler.format/-no-op-formatter/index.html
$dokka.location:io.mehow.ruler.format/NoOpFormatter/format/#io.mehow.ruler.Length[*]#io.mehow.ruler.format.FormattingDriver/PointingToDeclaration/ruler/io.mehow.ruler.format/-no-op-formatter/format.html
$dokka.location:io.mehow.ruler.format/Translator///PointingToDeclaration/ruler/io.mehow.ruler.format/-translator/index.html
$dokka.location:io.mehow.ruler.format/Translator/locale/#/PointingToDeclaration/ruler/io.mehow.ruler.format/-translator/locale.html
$dokka.location:io.mehow.ruler.format/Translator/symbol/#io.mehow.ruler.LengthUnit[*]/PointingToDeclaration/ruler/io.mehow.ruler.format/-translator/symbol.html
$dokka.location:io.mehow.ruler////PointingToDeclaration/ruler/io.mehow.ruler/index.html
$dokka.location:io.mehow.ruler/Distance.Companion///PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/index.html
$dokka.location:io.mehow.ruler/Distance.Companion/Epsilon/#/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/-epsilon.html
$dokka.location:io.mehow.ruler/Distance.Companion/Max/#/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/-max.html
$dokka.location:io.mehow.ruler/Distance.Companion/Min/#/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/-min.html
$dokka.location:io.mehow.ruler/Distance.Companion/Zero/#/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/-zero.html
$dokka.location:io.mehow.ruler/Distance.Companion/of/#kotlin.Double#io.mehow.ruler.LengthUnit[*]/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of.html
$dokka.location:io.mehow.ruler/Distance.Companion/of/#kotlin.Long#io.mehow.ruler.LengthUnit[*]/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofCentimeters/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-centimeters.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofCentimeters/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-centimeters.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofDecameters/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-decameters.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofDecameters/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-decameters.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofDecimeters/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-decimeters.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofDecimeters/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-decimeters.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofFeet/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-feet.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofFeet/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-feet.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofGigameters/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-gigameters.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofGigameters/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-gigameters.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofHectometers/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-hectometers.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofHectometers/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-hectometers.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofInches/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-inches.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofInches/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-inches.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofKilometers/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-kilometers.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofKilometers/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-kilometers.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofMegameters/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-megameters.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofMegameters/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-megameters.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofMeters/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-meters.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofMeters/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-meters.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofMicrometers/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-micrometers.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofMicrometers/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-micrometers.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofMiles/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-miles.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofMiles/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-miles.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofMillimeters/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-millimeters.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofMillimeters/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-millimeters.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofNanometers/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-nanometers.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofNanometers/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-nanometers.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofYards/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-yards.html
$dokka.location:io.mehow.ruler/Distance.Companion/ofYards/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-distance/-companion/of-yards.html
$dokka.location:io.mehow.ruler/Distance///PointingToDeclaration/ruler/io.mehow.ruler/-distance/index.html
$dokka.location:io.mehow.ruler/Distance/abs/#/PointingToDeclaration/ruler/io.mehow.ruler/-distance/abs.html
$dokka.location:io.mehow.ruler/Distance/compareTo/#io.mehow.ruler.Distance/PointingToDeclaration/ruler/io.mehow.ruler/-distance/compare-to.html
$dokka.location:io.mehow.ruler/Distance/div/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-distance/div.html
$dokka.location:io.mehow.ruler/Distance/div/#kotlin.Float/PointingToDeclaration/ruler/io.mehow.ruler/-distance/div.html
$dokka.location:io.mehow.ruler/Distance/div/#kotlin.Int/PointingToDeclaration/ruler/io.mehow.ruler/-distance/div.html
$dokka.location:io.mehow.ruler/Distance/div/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-distance/div.html
$dokka.location:io.mehow.ruler/Distance/equals/#kotlin.Any?/PointingToDeclaration/ruler/io.mehow.ruler/-distance/equals.html
$dokka.location:io.mehow.ruler/Distance/format/#io.mehow.ruler.format.FormattingContext#io.mehow.ruler.format.LengthConverter?#io.mehow.ruler.format.LengthFormatter/PointingToDeclaration/ruler/io.mehow.ruler/-distance/format.html
$dokka.location:io.mehow.ruler/Distance/format/#io.mehow.ruler.format.LengthConverter?#io.mehow.ruler.format.LengthFormatter/PointingToDeclaration/ruler/io.mehow.ruler/-distance/format.html
$dokka.location:io.mehow.ruler/Distance/hashCode/#/PointingToDeclaration/ruler/io.mehow.ruler/-distance/hash-code.html
$dokka.location:io.mehow.ruler/Distance/meters/#/PointingToDeclaration/ruler/io.mehow.ruler/-distance/meters.html
$dokka.location:io.mehow.ruler/Distance/minus/#io.mehow.ruler.Distance/PointingToDeclaration/ruler/io.mehow.ruler/-distance/minus.html
$dokka.location:io.mehow.ruler/Distance/minus/#io.mehow.ruler.Length[*]/PointingToDeclaration/ruler/io.mehow.ruler/-distance/minus.html
$dokka.location:io.mehow.ruler/Distance/plus/#io.mehow.ruler.Distance/PointingToDeclaration/ruler/io.mehow.ruler/-distance/plus.html
$dokka.location:io.mehow.ruler/Distance/plus/#io.mehow.ruler.Length[*]/PointingToDeclaration/ruler/io.mehow.ruler/-distance/plus.html
$dokka.location:io.mehow.ruler/Distance/times/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-distance/times.html
$dokka.location:io.mehow.ruler/Distance/times/#kotlin.Float/PointingToDeclaration/ruler/io.mehow.ruler/-distance/times.html
$dokka.location:io.mehow.ruler/Distance/times/#kotlin.Int/PointingToDeclaration/ruler/io.mehow.ruler/-distance/times.html
$dokka.location:io.mehow.ruler/Distance/times/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-distance/times.html
$dokka.location:io.mehow.ruler/Distance/toLength/#TypeParam(bounds=[io.mehow.ruler.LengthUnit[^]])/PointingToDeclaration/ruler/io.mehow.ruler/-distance/to-length.html
$dokka.location:io.mehow.ruler/Distance/toString/#/PointingToDeclaration/ruler/io.mehow.ruler/-distance/to-string.html
$dokka.location:io.mehow.ruler/Distance/unaryMinus/#/PointingToDeclaration/ruler/io.mehow.ruler/-distance/unary-minus.html
$dokka.location:io.mehow.ruler/ImperialLengthUnit.Companion///PointingToDeclaration/ruler/io.mehow.ruler/-imperial-length-unit/-companion/index.html
$dokka.location:io.mehow.ruler/ImperialLengthUnit.Companion/units/#/PointingToDeclaration/ruler/io.mehow.ruler/-imperial-length-unit/-companion/units.html
$dokka.location:io.mehow.ruler/ImperialLengthUnit.Foot///PointingToDeclaration/ruler/io.mehow.ruler/-imperial-length-unit/-foot/index.html
$dokka.location:io.mehow.ruler/ImperialLengthUnit.Inch///PointingToDeclaration/ruler/io.mehow.ruler/-imperial-length-unit/-inch/index.html
$dokka.location:io.mehow.ruler/ImperialLengthUnit.Mile///PointingToDeclaration/ruler/io.mehow.ruler/-imperial-length-unit/-mile/index.html
$dokka.location:io.mehow.ruler/ImperialLengthUnit.Yard///PointingToDeclaration/ruler/io.mehow.ruler/-imperial-length-unit/-yard/index.html
$dokka.location:io.mehow.ruler/ImperialLengthUnit///PointingToDeclaration/ruler/io.mehow.ruler/-imperial-length-unit/index.html
$dokka.location:io.mehow.ruler/ImperialLengthUnit/units/#/PointingToDeclaration/ruler/io.mehow.ruler/-imperial-length-unit/units.html
$dokka.location:io.mehow.ruler/InRageUnitFitter///PointingToDeclaration/ruler/io.mehow.ruler/-in-rage-unit-fitter/index.html
$dokka.location:io.mehow.ruler/InRageUnitFitter/findFit/#kotlin.collections.Iterable[TypeParam(bounds=[io.mehow.ruler.LengthUnit[^]])]#io.mehow.ruler.Length[TypeParam(bounds=[io.mehow.ruler.LengthUnit[^]])]/PointingToDeclaration/ruler/io.mehow.ruler/-in-rage-unit-fitter/find-fit.html
$dokka.location:io.mehow.ruler/Length.Companion///PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/index.html
$dokka.location:io.mehow.ruler/Length.Companion/of/#kotlin.Double#TypeParam(bounds=[io.mehow.ruler.LengthUnit[^]])/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of.html
$dokka.location:io.mehow.ruler/Length.Companion/of/#kotlin.Long#TypeParam(bounds=[io.mehow.ruler.LengthUnit[^]])/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of.html
$dokka.location:io.mehow.ruler/Length.Companion/ofCentimeters/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-centimeters.html
$dokka.location:io.mehow.ruler/Length.Companion/ofCentimeters/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-centimeters.html
$dokka.location:io.mehow.ruler/Length.Companion/ofDecameters/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-decameters.html
$dokka.location:io.mehow.ruler/Length.Companion/ofDecameters/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-decameters.html
$dokka.location:io.mehow.ruler/Length.Companion/ofDecimeters/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-decimeters.html
$dokka.location:io.mehow.ruler/Length.Companion/ofDecimeters/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-decimeters.html
$dokka.location:io.mehow.ruler/Length.Companion/ofFeet/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-feet.html
$dokka.location:io.mehow.ruler/Length.Companion/ofFeet/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-feet.html
$dokka.location:io.mehow.ruler/Length.Companion/ofGigameters/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-gigameters.html
$dokka.location:io.mehow.ruler/Length.Companion/ofGigameters/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-gigameters.html
$dokka.location:io.mehow.ruler/Length.Companion/ofHectometers/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-hectometers.html
$dokka.location:io.mehow.ruler/Length.Companion/ofHectometers/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-hectometers.html
$dokka.location:io.mehow.ruler/Length.Companion/ofInches/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-inches.html
$dokka.location:io.mehow.ruler/Length.Companion/ofInches/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-inches.html
$dokka.location:io.mehow.ruler/Length.Companion/ofKilometers/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-kilometers.html
$dokka.location:io.mehow.ruler/Length.Companion/ofKilometers/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-kilometers.html
$dokka.location:io.mehow.ruler/Length.Companion/ofMegameters/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-megameters.html
$dokka.location:io.mehow.ruler/Length.Companion/ofMegameters/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-megameters.html
$dokka.location:io.mehow.ruler/Length.Companion/ofMeters/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-meters.html
$dokka.location:io.mehow.ruler/Length.Companion/ofMeters/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-meters.html
$dokka.location:io.mehow.ruler/Length.Companion/ofMicrometers/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-micrometers.html
$dokka.location:io.mehow.ruler/Length.Companion/ofMicrometers/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-micrometers.html
$dokka.location:io.mehow.ruler/Length.Companion/ofMiles/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-miles.html
$dokka.location:io.mehow.ruler/Length.Companion/ofMiles/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-miles.html
$dokka.location:io.mehow.ruler/Length.Companion/ofMillimeters/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-millimeters.html
$dokka.location:io.mehow.ruler/Length.Companion/ofMillimeters/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-millimeters.html
$dokka.location:io.mehow.ruler/Length.Companion/ofNanometers/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-nanometers.html
$dokka.location:io.mehow.ruler/Length.Companion/ofNanometers/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-nanometers.html
$dokka.location:io.mehow.ruler/Length.Companion/ofYards/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-yards.html
$dokka.location:io.mehow.ruler/Length.Companion/ofYards/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-length/-companion/of-yards.html
$dokka.location:io.mehow.ruler/Length///PointingToDeclaration/ruler/io.mehow.ruler/-length/index.html
$dokka.location:io.mehow.ruler/Length/abs/#/PointingToDeclaration/ruler/io.mehow.ruler/-length/abs.html
$dokka.location:io.mehow.ruler/Length/coerceUnitAtLeastTo/#TypeParam(bounds=[io.mehow.ruler.LengthUnit[^]])/PointingToDeclaration/ruler/io.mehow.ruler/-length/coerce-unit-at-least-to.html
$dokka.location:io.mehow.ruler/Length/coerceUnitAtMostTo/#TypeParam(bounds=[io.mehow.ruler.LengthUnit[^]])/PointingToDeclaration/ruler/io.mehow.ruler/-length/coerce-unit-at-most-to.html
$dokka.location:io.mehow.ruler/Length/coerceUnitIn/#TypeParam(bounds=[io.mehow.ruler.LengthUnit[^]])#TypeParam(bounds=[io.mehow.ruler.LengthUnit[^]])/PointingToDeclaration/ruler/io.mehow.ruler/-length/coerce-unit-in.html
$dokka.location:io.mehow.ruler/Length/coerceUnitIn/#kotlin.ranges.ClosedRange[TypeParam(bounds=[io.mehow.ruler.LengthUnit[^]])]/PointingToDeclaration/ruler/io.mehow.ruler/-length/coerce-unit-in.html
$dokka.location:io.mehow.ruler/Length/compareTo/#io.mehow.ruler.Length[*]/PointingToDeclaration/ruler/io.mehow.ruler/-length/compare-to.html
$dokka.location:io.mehow.ruler/Length/distance/#/PointingToDeclaration/ruler/io.mehow.ruler/-length/distance.html
$dokka.location:io.mehow.ruler/Length/div/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-length/div.html
$dokka.location:io.mehow.ruler/Length/div/#kotlin.Float/PointingToDeclaration/ruler/io.mehow.ruler/-length/div.html
$dokka.location:io.mehow.ruler/Length/div/#kotlin.Int/PointingToDeclaration/ruler/io.mehow.ruler/-length/div.html
$dokka.location:io.mehow.ruler/Length/div/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-length/div.html
$dokka.location:io.mehow.ruler/Length/equals/#kotlin.Any?/PointingToDeclaration/ruler/io.mehow.ruler/-length/equals.html
$dokka.location:io.mehow.ruler/Length/format/#io.mehow.ruler.format.FormattingContext#io.mehow.ruler.format.LengthConverter?#io.mehow.ruler.format.LengthFormatter/PointingToDeclaration/ruler/io.mehow.ruler/-length/format.html
$dokka.location:io.mehow.ruler/Length/format/#io.mehow.ruler.format.LengthConverter?#io.mehow.ruler.format.LengthFormatter/PointingToDeclaration/ruler/io.mehow.ruler/-length/format.html
$dokka.location:io.mehow.ruler/Length/hashCode/#/PointingToDeclaration/ruler/io.mehow.ruler/-length/hash-code.html
$dokka.location:io.mehow.ruler/Length/measure/#/PointingToDeclaration/ruler/io.mehow.ruler/-length/measure.html
$dokka.location:io.mehow.ruler/Length/minus/#io.mehow.ruler.Distance/PointingToDeclaration/ruler/io.mehow.ruler/-length/minus.html
$dokka.location:io.mehow.ruler/Length/minus/#io.mehow.ruler.Length[*]/PointingToDeclaration/ruler/io.mehow.ruler/-length/minus.html
$dokka.location:io.mehow.ruler/Length/plus/#io.mehow.ruler.Distance/PointingToDeclaration/ruler/io.mehow.ruler/-length/plus.html
$dokka.location:io.mehow.ruler/Length/plus/#io.mehow.ruler.Length[*]/PointingToDeclaration/ruler/io.mehow.ruler/-length/plus.html
$dokka.location:io.mehow.ruler/Length/roundDown/#/PointingToDeclaration/ruler/io.mehow.ruler/-length/round-down.html
$dokka.location:io.mehow.ruler/Length/times/#kotlin.Double/PointingToDeclaration/ruler/io.mehow.ruler/-length/times.html
$dokka.location:io.mehow.ruler/Length/times/#kotlin.Float/PointingToDeclaration/ruler/io.mehow.ruler/-length/times.html
$dokka.location:io.mehow.ruler/Length/times/#kotlin.Int/PointingToDeclaration/ruler/io.mehow.ruler/-length/times.html
$dokka.location:io.mehow.ruler/Length/times/#kotlin.Long/PointingToDeclaration/ruler/io.mehow.ruler/-length/times.html
$dokka.location:io.mehow.ruler/Length/toString/#/PointingToDeclaration/ruler/io.mehow.ruler/-length/to-string.html
$dokka.location:io.mehow.ruler/Length/unaryMinus/#/PointingToDeclaration/ruler/io.mehow.ruler/-length/unary-minus.html
$dokka.location:io.mehow.ruler/Length/unit/#/PointingToDeclaration/ruler/io.mehow.ruler/-length/unit.html
$dokka.location:io.mehow.ruler/Length/withFittingUnit/#kotlin.collections.Iterable[TypeParam(bounds=[io.mehow.ruler.LengthUnit[^]])]#io.mehow.ruler.UnitFitter/PointingToDeclaration/ruler/io.mehow.ruler/-length/with-fitting-unit.html
$dokka.location:io.mehow.ruler/Length/withUnit/#TypeParam(bounds=[io.mehow.ruler.LengthUnit[^]])/PointingToDeclaration/ruler/io.mehow.ruler/-length/with-unit.html
$dokka.location:io.mehow.ruler/LengthUnit.Companion///PointingToDeclaration/ruler/io.mehow.ruler/-length-unit/-companion/index.html
$dokka.location:io.mehow.ruler/LengthUnit.Companion/units/#/PointingToDeclaration/ruler/io.mehow.ruler/-length-unit/-companion/units.html
$dokka.location:io.mehow.ruler/LengthUnit///PointingToDeclaration/ruler/io.mehow.ruler/-length-unit/index.html
$dokka.location:io.mehow.ruler/LengthUnit/bounds/#/PointingToDeclaration/ruler/io.mehow.ruler/-length-unit/bounds.html
$dokka.location:io.mehow.ruler/LengthUnit/compareTo/#TypeParam(bounds=[io.mehow.ruler.LengthUnit[^]])/PointingToDeclaration/ruler/io.mehow.ruler/-length-unit/compare-to.html
$dokka.location:io.mehow.ruler/LengthUnit/contains/#io.mehow.ruler.Distance/PointingToDeclaration/ruler/io.mehow.ruler/-length-unit/contains.html
$dokka.location:io.mehow.ruler/LengthUnit/contains/#io.mehow.ruler.Length[*]/PointingToDeclaration/ruler/io.mehow.ruler/-length-unit/contains.html
$dokka.location:io.mehow.ruler/LengthUnit/meterRatio/#/PointingToDeclaration/ruler/io.mehow.ruler/-length-unit/meter-ratio.html
$dokka.location:io.mehow.ruler/LengthUnit/toString/#/PointingToDeclaration/ruler/io.mehow.ruler/-length-unit/to-string.html
$dokka.location:io.mehow.ruler/LengthUnit/units/#/PointingToDeclaration/ruler/io.mehow.ruler/-length-unit/units.html
$dokka.location:io.mehow.ruler/LogDistanceUnitFitter///PointingToDeclaration/ruler/io.mehow.ruler/-log-distance-unit-fitter/index.html
$dokka.location:io.mehow.ruler/LogDistanceUnitFitter/findFit/#kotlin.collections.Iterable[TypeParam(bounds=[io.mehow.ruler.LengthUnit[^]])]#io.mehow.ruler.Length[TypeParam(bounds=[io.mehow.ruler.LengthUnit[^]])]/PointingToDeclaration/ruler/io.mehow.ruler/-log-distance-unit-fitter/find-fit.html
$dokka.location:io.mehow.ruler/Measure///PointingToDeclaration/ruler/io.mehow.ruler/-measure/index.html
$dokka.location:io.mehow.ruler/Measure/dimension/#/PointingToDeclaration/ruler/io.mehow.ruler/-measure/dimension.html
$dokka.location:io.mehow.ruler/Measure/equals/#kotlin.Any?/PointingToDeclaration/ruler/io.mehow.ruler/-measure/equals.html
$dokka.location:io.mehow.ruler/Measure/hashCode/#/PointingToDeclaration/ruler/io.mehow.ruler/-measure/hash-code.html
$dokka.location:io.mehow.ruler/Measure/toString/#/PointingToDeclaration/ruler/io.mehow.ruler/-measure/to-string.html
$dokka.location:io.mehow.ruler/Measure/value/#/PointingToDeclaration/ruler/io.mehow.ruler/-measure/value.html
$dokka.location:io.mehow.ruler/Ruler///PointingToDeclaration/ruler/io.mehow.ruler/-ruler/index.html
$dokka.location:io.mehow.ruler/Ruler/addConverterFactory/#io.mehow.ruler.format.LengthConverter.Factory/PointingToDeclaration/ruler/io.mehow.ruler/-ruler/add-converter-factory.html
$dokka.location:io.mehow.ruler/Ruler/addFormatterFactory/#io.mehow.ruler.format.LengthFormatter.Factory/PointingToDeclaration/ruler/io.mehow.ruler/-ruler/add-formatter-factory.html
$dokka.location:io.mehow.ruler/Ruler/convert/#io.mehow.ruler.Length[*]/PointingToDeclaration/ruler/io.mehow.ruler/-ruler/convert.html
$dokka.location:io.mehow.ruler/Ruler/driver/#/PointingToDeclaration/ruler/io.mehow.ruler/-ruler/driver.html
$dokka.location:io.mehow.ruler/Ruler/format/#io.mehow.ruler.Length[*]#io.mehow.ruler.format.FormattingDriver/PointingToDeclaration/ruler/io.mehow.ruler/-ruler/format.html
$dokka.location:io.mehow.ruler/Ruler/installedConverterFactories/#/PointingToDeclaration/ruler/io.mehow.ruler/-ruler/installed-converter-factories.html
$dokka.location:io.mehow.ruler/Ruler/installedFormatterFactories/#/PointingToDeclaration/ruler/io.mehow.ruler/-ruler/installed-formatter-factories.html
$dokka.location:io.mehow.ruler/Ruler/installedImperialCountryCodes/#/PointingToDeclaration/ruler/io.mehow.ruler/-ruler/installed-imperial-country-codes.html
$dokka.location:io.mehow.ruler/Ruler/isUkImperial/#/PointingToDeclaration/ruler/io.mehow.ruler/-ruler/is-uk-imperial.html
$dokka.location:io.mehow.ruler/Ruler/removeConverterFactory/#io.mehow.ruler.format.LengthConverter.Factory/PointingToDeclaration/ruler/io.mehow.ruler/-ruler/remove-converter-factory.html
$dokka.location:io.mehow.ruler/Ruler/removeFormatterFactory/#io.mehow.ruler.format.LengthFormatter.Factory/PointingToDeclaration/ruler/io.mehow.ruler/-ruler/remove-formatter-factory.html
$dokka.location:io.mehow.ruler/Ruler/useImperialFormatter/#/PointingToDeclaration/ruler/io.mehow.ruler/-ruler/use-imperial-formatter.html
$dokka.location:io.mehow.ruler/SiLengthUnit.Centimeter///PointingToDeclaration/ruler/io.mehow.ruler/-si-length-unit/-centimeter/index.html
$dokka.location:io.mehow.ruler/SiLengthUnit.Companion///PointingToDeclaration/ruler/io.mehow.ruler/-si-length-unit/-companion/index.html
$dokka.location:io.mehow.ruler/SiLengthUnit.Companion/units/#/PointingToDeclaration/ruler/io.mehow.ruler/-si-length-unit/-companion/units.html
$dokka.location:io.mehow.ruler/SiLengthUnit.Decameter///PointingToDeclaration/ruler/io.mehow.ruler/-si-length-unit/-decameter/index.html
$dokka.location:io.mehow.ruler/SiLengthUnit.Decimeter///PointingToDeclaration/ruler/io.mehow.ruler/-si-length-unit/-decimeter/index.html
$dokka.location:io.mehow.ruler/SiLengthUnit.Gigameter///PointingToDeclaration/ruler/io.mehow.ruler/-si-length-unit/-gigameter/index.html
$dokka.location:io.mehow.ruler/SiLengthUnit.Hectometer///PointingToDeclaration/ruler/io.mehow.ruler/-si-length-unit/-hectometer/index.html
$dokka.location:io.mehow.ruler/SiLengthUnit.Kilometer///PointingToDeclaration/ruler/io.mehow.ruler/-si-length-unit/-kilometer/index.html
$dokka.location:io.mehow.ruler/SiLengthUnit.Megameter///PointingToDeclaration/ruler/io.mehow.ruler/-si-length-unit/-megameter/index.html
$dokka.location:io.mehow.ruler/SiLengthUnit.Meter///PointingToDeclaration/ruler/io.mehow.ruler/-si-length-unit/-meter/index.html
$dokka.location:io.mehow.ruler/SiLengthUnit.Micrometer///PointingToDeclaration/ruler/io.mehow.ruler/-si-length-unit/-micrometer/index.html
$dokka.location:io.mehow.ruler/SiLengthUnit.Millimeter///PointingToDeclaration/ruler/io.mehow.ruler/-si-length-unit/-millimeter/index.html
$dokka.location:io.mehow.ruler/SiLengthUnit.Nanometer///PointingToDeclaration/ruler/io.mehow.ruler/-si-length-unit/-nanometer/index.html
$dokka.location:io.mehow.ruler/SiLengthUnit///PointingToDeclaration/ruler/io.mehow.ruler/-si-length-unit/index.html
$dokka.location:io.mehow.ruler/SiLengthUnit/units/#/PointingToDeclaration/ruler/io.mehow.ruler/-si-length-unit/units.html
$dokka.location:io.mehow.ruler/UnitFitter///PointingToDeclaration/ruler/io.mehow.ruler/-unit-fitter/index.html
$dokka.location:io.mehow.ruler/UnitFitter/findFit/#kotlin.collections.Iterable[TypeParam(bounds=[io.mehow.ruler.LengthUnit[^]])]#io.mehow.ruler.Length[TypeParam(bounds=[io.mehow.ruler.LengthUnit[^]])]/PointingToDeclaration/ruler/io.mehow.ruler/-unit-fitter/find-fit.html
io.mehow.ruler
io.mehow.ruler.format

